{"ast":null,"code":"import React from'react';import{useState,useContext,useEffect,useRef}from'react';import{useLocation,useNavigate,useSearchParams}from'react-router-dom';import{uniqueBy}from'../../helper/filterRepeat';import WeatherContext from'../../helper/weatherContext';import closeIcons from'../../images/close_icon.png';import'./InputSearch.css';import Loading from'../../components/Loading';import ErrorFetch from'../../components/ErrorFetch';import{getCurrentWeatherUrl,getCurrentWeatherHourlyUrl}from'../../helper/apiWeather';import fetchData from'../../helper/fetchData';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function InputSearch(){const navigate=useNavigate();const location=useLocation();const weatherContext=useContext(WeatherContext);const inputRef=useRef();const optionRef=useRef();const[cityOptions,setCityOptions]=useState([]);const[isFound,setFound]=useState(false);const[isActiveInput,setActiveInput]=useState(false);const[cityLocation,setCityLocation]=useState(null);const[inputValue,setInputValue]=useState('');const[counter,setCounter]=useState(-1);const isActiveDelete=inputValue.length>0;const[searchParams,setSearchParams]=useSearchParams();useEffect(()=>{if(weatherContext.nameCity&&weatherContext.latCity&&weatherContext.lonCity){setSearchParams({lat:weatherContext.latCity,lon:weatherContext.lonCity,city:weatherContext.nameCity});}},[weatherContext.nameCity,weatherContext.latCity,weatherContext.lonCity]);useEffect(()=>{window.addEventListener('click',onClickOutsideInput);return()=>window.removeEventListener('click',onClickOutsideInput);},[]);const onClickOutsideInput=e=>{if(!inputRef.current.contains(e.target)){setActiveInput(false);}};useEffect(()=>{const latitude=searchParams.get('lat');const longitude=searchParams.get('lon');const city=searchParams.get('city');weatherContext.setLatCity(latitude);weatherContext.setLonCity(longitude);weatherContext.setNameCity(city);if(latitude&&longitude){weatherContext.setLoading(true);fetchData(getCurrentWeatherUrl(latitude,longitude)).then(_ref=>{let{data}=_ref;return weatherContext.setWeatherData(data);}).catch(()=>weatherContext.setError(true)).finally(()=>weatherContext.setLoading(false));fetchData(getCurrentWeatherHourlyUrl(latitude,longitude)).then(_ref2=>{let{data}=_ref2;return weatherContext.setWeatherHourly(data);}).catch(()=>weatherContext.setError(true)).finally(()=>weatherContext.setLoading(false));}else{const success=position=>{const lat=position.coords.latitude;const lon=position.coords.longitude;weatherContext.setLatCity(lat);weatherContext.setLonCity(lon);weatherContext.setLoading(true);fetchData(\"https://nominatim.openstreetmap.org/reverse?format=json&lat=\".concat(lat,\"&lon=\").concat(lon,\"&accept-language=en\")).then(data=>weatherContext.setNameCity(data.address.city)).catch(()=>weatherContext.setError(true)).finally(()=>weatherContext.setLoading(false));fetchData(getCurrentWeatherUrl(lat,lon)).then(_ref3=>{let{data}=_ref3;return weatherContext.setWeatherData(data);}).catch(()=>weatherContext.setError(true)).finally(()=>weatherContext.setLoading(false));fetchData(getCurrentWeatherHourlyUrl(lat,lon)).then(_ref4=>{let{data}=_ref4;return weatherContext.setWeatherHourly(data);}).catch(()=>weatherContext.setError(true)).finally(()=>weatherContext.setLoading(false));};const error=()=>{weatherContext.setLoading(false);weatherContext.setError(true);};if(navigator.geolocation){navigator.geolocation.getCurrentPosition(success,error);}}},[]);useEffect(()=>{const debounce=setTimeout(()=>{if(inputValue.length>0){fetchData(\"http://api.geonames.org/searchJSON?name=\".concat(inputValue,\"&maxRows=100&username=mkskhjwssofwfjjcjw00&&&\")).then(data=>{const filteredCities=data.geonames.filter(filt=>{return filt.fclName===\"city, village,...\"&&filt.fcodeName!==\"section of populated place\"&&filt.lat&&filt.lng&&filt.name.toLowerCase().startsWith(inputValue.toLowerCase());}).sort((a,b)=>b.population-a.population);const uniqueFilteredCities=uniqueBy(filteredCities,(o1,o2)=>o1.name===o2.name&&o1.adminName1===o2.adminName1&&o1.countryName===o2.countryName);uniqueFilteredCities.length===0?setFound(true):setFound(false);if(uniqueFilteredCities.length<=6){setCityOptions(uniqueFilteredCities);}if(uniqueFilteredCities.length>6&&uniqueFilteredCities.length<12){setCityOptions(uniqueFilteredCities.slice(0,6));}if(uniqueFilteredCities.length>12&&uniqueFilteredCities.length<18){setCityOptions(uniqueFilteredCities.slice(0,12));}if(uniqueFilteredCities.length>18&&uniqueFilteredCities.length<24){setCityOptions(uniqueFilteredCities.slice(0,18));}if(uniqueFilteredCities.length>24&&uniqueFilteredCities.length<30){setCityOptions(uniqueFilteredCities.slice(0,24));}if(uniqueFilteredCities.length>30){setCityOptions(uniqueFilteredCities.slice(0,30));}setCounter(-1);}).catch(()=>weatherContext.setError(true));}else{setCityOptions([]);setFound(false);}},1000);return()=>clearTimeout(debounce);},[inputValue]);const handleInput=e=>{setInputValue(e.target.value);};const handleSearchClick=item=>{weatherContext.setLatCity(item.lat);weatherContext.setLonCity(item.lng);weatherContext.setNameCity(item.name);setInputValue('');setCityOptions([]);window.scrollTo({top:0,behavior:'smooth'});if(location.pathname!==''){navigate('/');}weatherContext.setLoading(true);fetchData(getCurrentWeatherUrl(item.lat,item.lng)).then(_ref5=>{let{data}=_ref5;return weatherContext.setWeatherData(data);}).catch(()=>weatherContext.setError(true)).finally(()=>weatherContext.setLoading(false));fetchData(getCurrentWeatherHourlyUrl(item.lat,item.lng)).then(_ref6=>{let{data}=_ref6;return weatherContext.setWeatherHourly(data);}).catch(()=>weatherContext.setError(true)).finally(()=>weatherContext.setLoading(false));};const onKey=e=>{if(e.key==='Enter'){handleSearchClick(cityLocation);inputRef.current.blur();}if(e.key==='ArrowDown'&&counter<cityOptions.length-1){e.preventDefault();setCounter(prev=>prev+1);setCityLocation(cityOptions[counter+1]);}if(e.key==='ArrowUp'&&counter>=0){e.preventDefault();setCounter(prev=>prev-1);setCityLocation(cityOptions[counter-1]);}if(e.key==='ArrowDown'&&counter>0&&Number.isInteger((counter+1)/6)){e.preventDefault();optionRef.current.scrollBy({top:300,behavior:'smooth'});}if(e.key==='ArrowUp'&&counter%6===0){e.preventDefault();optionRef.current.scrollBy({top:-300,behavior:'smooth'});}};const onMouseEnter=(item,index)=>{setCityLocation(item);setCounter(index);};const onClickDelete=()=>{setFound(false);setCityOptions([]);setInputValue('');inputRef.current.focus();};const onClickIsFound=e=>{e.stopPropagation();inputRef.current.focus();};return/*#__PURE__*/_jsxs(\"div\",{className:\"search-wrapper\",children:[weatherContext.isLoading&&/*#__PURE__*/_jsx(Loading,{}),weatherContext.isError&&/*#__PURE__*/_jsx(ErrorFetch,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-search\",children:[/*#__PURE__*/_jsx(\"input\",{ref:inputRef,value:inputValue,className:\"input-search\",placeholder:\"\\uD83D\\uDD0D\\uFE0E Search location\",type:\"text\",onInput:handleInput,onFocus:()=>setActiveInput(true),onChange:()=>setActiveInput(true),onKeyDown:onKey}),isActiveDelete&&/*#__PURE__*/_jsx(\"img\",{onClick:onClickDelete,src:closeIcons,alt:\"delete_text\"})]}),/*#__PURE__*/_jsxs(\"ul\",{className:isActiveInput?'lists-wrapper active':'lists-wrapper',ref:optionRef,children:[isFound&&/*#__PURE__*/_jsx(\"li\",{className:\"not-found\",onClick:onClickIsFound,children:\"city not found\"}),cityOptions.map((item,index)=>/*#__PURE__*/_jsxs(\"li\",{onClick:()=>handleSearchClick(item),onMouseEnter:()=>onMouseEnter(item,index),className:index===counter?'focused':'',children:[/*#__PURE__*/_jsx(\"h3\",{children:item.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"city-details\",children:[item.adminName1&&/*#__PURE__*/_jsxs(\"p\",{children:[item.adminName1,\",\"]}),item.countryName&&/*#__PURE__*/_jsx(\"p\",{children:item.countryName})]})]},index))]})]});}","map":{"version":3,"names":["React","useState","useContext","useEffect","useRef","useLocation","useNavigate","useSearchParams","uniqueBy","WeatherContext","closeIcons","Loading","ErrorFetch","getCurrentWeatherUrl","getCurrentWeatherHourlyUrl","fetchData","jsx","_jsx","jsxs","_jsxs","InputSearch","navigate","location","weatherContext","inputRef","optionRef","cityOptions","setCityOptions","isFound","setFound","isActiveInput","setActiveInput","cityLocation","setCityLocation","inputValue","setInputValue","counter","setCounter","isActiveDelete","length","searchParams","setSearchParams","nameCity","latCity","lonCity","lat","lon","city","window","addEventListener","onClickOutsideInput","removeEventListener","e","current","contains","target","latitude","get","longitude","setLatCity","setLonCity","setNameCity","setLoading","then","_ref","data","setWeatherData","catch","setError","finally","_ref2","setWeatherHourly","success","position","coords","concat","address","_ref3","_ref4","error","navigator","geolocation","getCurrentPosition","debounce","setTimeout","filteredCities","geonames","filter","filt","fclName","fcodeName","lng","name","toLowerCase","startsWith","sort","a","b","population","uniqueFilteredCities","o1","o2","adminName1","countryName","slice","clearTimeout","handleInput","value","handleSearchClick","item","scrollTo","top","behavior","pathname","_ref5","_ref6","onKey","key","blur","preventDefault","prev","Number","isInteger","scrollBy","onMouseEnter","index","onClickDelete","focus","onClickIsFound","stopPropagation","className","children","isLoading","isError","ref","placeholder","type","onInput","onFocus","onChange","onKeyDown","onClick","src","alt","map"],"sources":["C:/Users/Gold/Desktop/weather/src/Header/Input/InputSearch.js"],"sourcesContent":["import React from 'react'\r\nimport { useState, useContext, useEffect, useRef } from 'react'\r\nimport { useLocation, useNavigate, useSearchParams } from 'react-router-dom'\r\nimport {uniqueBy} from '../../helper/filterRepeat'\r\nimport WeatherContext from '../../helper/weatherContext'\r\nimport closeIcons from '../../images/close_icon.png'\r\nimport './InputSearch.css'\r\nimport Loading from '../../components/Loading'\r\nimport ErrorFetch from '../../components/ErrorFetch'\r\nimport { getCurrentWeatherUrl, getCurrentWeatherHourlyUrl} from '../../helper/apiWeather' \r\nimport fetchData from '../../helper/fetchData'\r\n\r\n\r\nexport default function InputSearch() {\r\n\r\nconst navigate = useNavigate()\r\nconst location = useLocation()\r\nconst weatherContext = useContext(WeatherContext)\r\nconst inputRef = useRef()\r\nconst optionRef = useRef()\r\nconst [cityOptions, setCityOptions] = useState([])\r\nconst [isFound, setFound] = useState(false)\r\nconst [isActiveInput, setActiveInput] = useState(false)\r\nconst [cityLocation, setCityLocation] = useState(null)\r\nconst [inputValue, setInputValue] = useState('')\r\nconst [counter, setCounter] = useState(-1)\r\nconst isActiveDelete = inputValue.length > 0\r\nconst [searchParams, setSearchParams] = useSearchParams()\r\n\r\nuseEffect(() => {\r\n    if(weatherContext.nameCity && weatherContext.latCity && weatherContext.lonCity){\r\n        setSearchParams({ lat: weatherContext.latCity, lon: weatherContext.lonCity ,city: weatherContext.nameCity})\r\n    }\r\n}, [weatherContext.nameCity, weatherContext.latCity, weatherContext.lonCity])\r\n\r\nuseEffect(() => {\r\n    window.addEventListener('click', onClickOutsideInput)\r\n    return () => window.removeEventListener('click', onClickOutsideInput)\r\n},[])\r\n\r\nconst onClickOutsideInput = (e) => {\r\n    if(!inputRef.current.contains(e.target)){\r\n        setActiveInput(false)\r\n    }\r\n}\r\n\r\nuseEffect(() => {\r\n\r\n    const latitude = searchParams.get('lat')\r\n    const longitude = searchParams.get('lon')\r\n    const city = searchParams.get('city')\r\n\r\n    weatherContext.setLatCity(latitude)\r\n    weatherContext.setLonCity(longitude)\r\n    weatherContext.setNameCity(city)\r\n\r\n    if(latitude && longitude){\r\n        weatherContext.setLoading(true)\r\n        fetchData(getCurrentWeatherUrl(latitude, longitude))\r\n            .then(({data}) => weatherContext.setWeatherData(data))\r\n            .catch(() => weatherContext.setError(true))\r\n            .finally(() => weatherContext.setLoading(false))\r\n\r\n        fetchData(getCurrentWeatherHourlyUrl(latitude, longitude))\r\n            .then(({data}) => weatherContext.setWeatherHourly(data))\r\n            .catch(() => weatherContext.setError(true))\r\n            .finally(() => weatherContext.setLoading(false))\r\n    } \r\n    else {\r\n        const success = (position) => {\r\n\r\n            const lat = position.coords.latitude\r\n            const lon = position.coords.longitude\r\n    \r\n            weatherContext.setLatCity(lat)\r\n            weatherContext.setLonCity(lon)\r\n\r\n            weatherContext.setLoading(true)\r\n            fetchData(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lon}&accept-language=en`)\r\n                .then(data => weatherContext.setNameCity(data.address.city))\r\n                .catch(() => weatherContext.setError(true))\r\n                .finally(() => weatherContext.setLoading(false))\r\n\r\n            fetchData(getCurrentWeatherUrl(lat, lon))\r\n                .then(({data}) => weatherContext.setWeatherData(data))\r\n                .catch(() => weatherContext.setError(true))\r\n                .finally(() => weatherContext.setLoading(false))\r\n\r\n            fetchData(getCurrentWeatherHourlyUrl(lat, lon))\r\n                .then(({data}) => weatherContext.setWeatherHourly(data))\r\n                .catch(() => weatherContext.setError(true))\r\n                .finally(() => weatherContext.setLoading(false))\r\n        }\r\n    \r\n        const error = () => {\r\n            weatherContext.setLoading(false)\r\n            weatherContext.setError(true)\r\n        }\r\n    \r\n        if(navigator.geolocation){\r\n            navigator.geolocation.getCurrentPosition(success, error)\r\n        }\r\n    }\r\n    \r\n    \r\n},[])\r\n\r\nuseEffect(() => {\r\n    const debounce = setTimeout(() => {\r\n        if(inputValue.length > 0){\r\n            fetchData(`http://api.geonames.org/searchJSON?name=${inputValue}&maxRows=100&username=mkskhjwssofwfjjcjw00&&&`)\r\n                .then(data => {\r\n                    const filteredCities = data.geonames\r\n                        .filter(filt => {\r\n                            return filt.fclName === \"city, village,...\" \r\n                            && filt.fcodeName !== \"section of populated place\" \r\n                            && filt.lat && filt.lng \r\n                            && filt.name.toLowerCase().startsWith(inputValue.toLowerCase())\r\n                        })\r\n                        .sort((a,b)=> b.population - a.population)\r\n                    const uniqueFilteredCities = uniqueBy(filteredCities, (o1, o2) => o1.name === o2.name && o1.adminName1 === o2.adminName1 && o1.countryName === o2.countryName)\r\n                    uniqueFilteredCities.length === 0 ? setFound(true) : setFound(false)\r\n                    if(uniqueFilteredCities.length <= 6){\r\n                        setCityOptions(uniqueFilteredCities)\r\n                    }\r\n                    if(uniqueFilteredCities.length > 6 && uniqueFilteredCities.length < 12){\r\n                        setCityOptions(uniqueFilteredCities.slice(0, 6))\r\n                    }\r\n                    if(uniqueFilteredCities.length > 12 && uniqueFilteredCities.length < 18){\r\n                        setCityOptions(uniqueFilteredCities.slice(0, 12))\r\n                    }\r\n                    if(uniqueFilteredCities.length > 18 && uniqueFilteredCities.length < 24){\r\n                        setCityOptions(uniqueFilteredCities.slice(0, 18))\r\n                    }\r\n                    if(uniqueFilteredCities.length > 24 && uniqueFilteredCities.length < 30){\r\n                        setCityOptions(uniqueFilteredCities.slice(0, 24))\r\n                    }\r\n                    if(uniqueFilteredCities.length > 30){\r\n                        setCityOptions(uniqueFilteredCities.slice(0, 30))\r\n                    }\r\n                    setCounter(-1)\r\n                })\r\n                .catch(() => weatherContext.setError(true))\r\n        }\r\n        else{\r\n            setCityOptions([])\r\n            setFound(false)\r\n        }\r\n    },1000)\r\n\r\n    return () => clearTimeout(debounce)\r\n\r\n},[inputValue])\r\n\r\nconst handleInput = (e) => {\r\n    setInputValue(e.target.value)\r\n}\r\n\r\nconst handleSearchClick = (item) => {\r\n\r\n    weatherContext.setLatCity(item.lat)\r\n    weatherContext.setLonCity(item.lng)\r\n    weatherContext.setNameCity(item.name)\r\n    setInputValue('')\r\n    setCityOptions([])\r\n    window.scrollTo({ top: 0, behavior: 'smooth' })\r\n    if(location.pathname !== ''){\r\n        navigate('/')\r\n    }\r\n    weatherContext.setLoading(true)\r\n    fetchData(getCurrentWeatherUrl(item.lat, item.lng))\r\n        .then(({data}) => weatherContext.setWeatherData(data))\r\n        .catch(() => weatherContext.setError(true))\r\n        .finally(() => weatherContext.setLoading(false))\r\n\r\n    fetchData(getCurrentWeatherHourlyUrl(item.lat, item.lng))\r\n        .then(({data}) => weatherContext.setWeatherHourly(data))\r\n        .catch(() => weatherContext.setError(true))\r\n        .finally(() => weatherContext.setLoading(false))\r\n}\r\n\r\nconst onKey = (e) => {\r\n    if(e.key === 'Enter'){\r\n        handleSearchClick(cityLocation)\r\n        inputRef.current.blur()\r\n    }\r\n    if(e.key === 'ArrowDown' && counter < cityOptions.length - 1){\r\n        e.preventDefault()\r\n        setCounter((prev) => prev + 1)\r\n        setCityLocation(cityOptions[counter + 1])\r\n    }\r\n    if(e.key === 'ArrowUp' && counter >= 0){\r\n        e.preventDefault()\r\n        setCounter((prev) => prev - 1)\r\n        setCityLocation(cityOptions[counter - 1])\r\n    }\r\n\r\n    if(e.key === 'ArrowDown' && counter > 0 && Number.isInteger((counter + 1) / 6)){\r\n        e.preventDefault()\r\n        optionRef.current.scrollBy({ top: 300, behavior: 'smooth' })\r\n    }\r\n\r\n    if(e.key === 'ArrowUp' && counter % 6 === 0){\r\n        e.preventDefault()\r\n        optionRef.current.scrollBy({ top: -300, behavior: 'smooth' })\r\n    }\r\n}\r\n\r\nconst onMouseEnter = (item, index) => {\r\n    setCityLocation(item)\r\n    setCounter(index)\r\n}\r\n\r\nconst onClickDelete = () => {\r\n    setFound(false)\r\n    setCityOptions([])\r\n    setInputValue('')\r\n    inputRef.current.focus()\r\n}\r\n\r\nconst onClickIsFound = (e) => {\r\n    e.stopPropagation()\r\n    inputRef.current.focus()\r\n}\r\n\r\nreturn (\r\n<div className='search-wrapper'>\r\n    {weatherContext.isLoading && <Loading />}\r\n    {weatherContext.isError && <ErrorFetch />}\r\n    <div className='input-search'>\r\n        <input\r\n            ref={inputRef}\r\n            value={inputValue}\r\n            className='input-search'\r\n            placeholder='🔍︎ Search location'\r\n            type=\"text\" \r\n            onInput={handleInput}\r\n            onFocus={() => setActiveInput(true)}\r\n            onChange={() => setActiveInput(true)}\r\n            onKeyDown={onKey}\r\n        />\r\n        {isActiveDelete && <img onClick={onClickDelete} src={closeIcons} alt=\"delete_text\" />}\r\n    </div>\r\n    <ul className={isActiveInput ? 'lists-wrapper active' : 'lists-wrapper'} ref={optionRef}>   \r\n        {isFound && <li className='not-found' onClick={onClickIsFound}>city not found</li>}\r\n        {cityOptions.map((item, index) => \r\n        <li \r\n            key={index} \r\n            onClick={() => handleSearchClick(item)} \r\n            onMouseEnter={() => onMouseEnter(item, index)}\r\n            className={index === counter ? 'focused' : ''}\r\n        >\r\n            <h3>{item.name}</h3>\r\n            <div className='city-details'>\r\n                {item.adminName1 && <p>{item.adminName1},</p>}\r\n                {item.countryName && <p>{item.countryName}</p>}\r\n            </div>\r\n        </li>)}\r\n    </ul>\r\n</div>\r\n)\r\n}\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,CAAEC,UAAU,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAC/D,OAASC,WAAW,CAAEC,WAAW,CAAEC,eAAe,KAAQ,kBAAkB,CAC5E,OAAQC,QAAQ,KAAO,2BAA2B,CAClD,MAAO,CAAAC,cAAc,KAAM,6BAA6B,CACxD,MAAO,CAAAC,UAAU,KAAM,6BAA6B,CACpD,MAAO,mBAAmB,CAC1B,MAAO,CAAAC,OAAO,KAAM,0BAA0B,CAC9C,MAAO,CAAAC,UAAU,KAAM,6BAA6B,CACpD,OAASC,oBAAoB,CAAEC,0BAA0B,KAAO,yBAAyB,CACzF,MAAO,CAAAC,SAAS,KAAM,wBAAwB,QAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAG9C,cAAe,SAAS,CAAAC,WAAWA,CAAA,CAAG,CAEtC,KAAM,CAAAC,QAAQ,CAAGf,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAgB,QAAQ,CAAGjB,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAkB,cAAc,CAAGrB,UAAU,CAACO,cAAc,CAAC,CACjD,KAAM,CAAAe,QAAQ,CAAGpB,MAAM,CAAC,CAAC,CACzB,KAAM,CAAAqB,SAAS,CAAGrB,MAAM,CAAC,CAAC,CAC1B,KAAM,CAACsB,WAAW,CAAEC,cAAc,CAAC,CAAG1B,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAAC2B,OAAO,CAAEC,QAAQ,CAAC,CAAG5B,QAAQ,CAAC,KAAK,CAAC,CAC3C,KAAM,CAAC6B,aAAa,CAAEC,cAAc,CAAC,CAAG9B,QAAQ,CAAC,KAAK,CAAC,CACvD,KAAM,CAAC+B,YAAY,CAAEC,eAAe,CAAC,CAAGhC,QAAQ,CAAC,IAAI,CAAC,CACtD,KAAM,CAACiC,UAAU,CAAEC,aAAa,CAAC,CAAGlC,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACmC,OAAO,CAAEC,UAAU,CAAC,CAAGpC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC1C,KAAM,CAAAqC,cAAc,CAAGJ,UAAU,CAACK,MAAM,CAAG,CAAC,CAC5C,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGlC,eAAe,CAAC,CAAC,CAEzDJ,SAAS,CAAC,IAAM,CACZ,GAAGoB,cAAc,CAACmB,QAAQ,EAAInB,cAAc,CAACoB,OAAO,EAAIpB,cAAc,CAACqB,OAAO,CAAC,CAC3EH,eAAe,CAAC,CAAEI,GAAG,CAAEtB,cAAc,CAACoB,OAAO,CAAEG,GAAG,CAAEvB,cAAc,CAACqB,OAAO,CAAEG,IAAI,CAAExB,cAAc,CAACmB,QAAQ,CAAC,CAAC,CAC/G,CACJ,CAAC,CAAE,CAACnB,cAAc,CAACmB,QAAQ,CAAEnB,cAAc,CAACoB,OAAO,CAAEpB,cAAc,CAACqB,OAAO,CAAC,CAAC,CAE7EzC,SAAS,CAAC,IAAM,CACZ6C,MAAM,CAACC,gBAAgB,CAAC,OAAO,CAAEC,mBAAmB,CAAC,CACrD,MAAO,IAAMF,MAAM,CAACG,mBAAmB,CAAC,OAAO,CAAED,mBAAmB,CAAC,CACzE,CAAC,CAAC,EAAE,CAAC,CAEL,KAAM,CAAAA,mBAAmB,CAAIE,CAAC,EAAK,CAC/B,GAAG,CAAC5B,QAAQ,CAAC6B,OAAO,CAACC,QAAQ,CAACF,CAAC,CAACG,MAAM,CAAC,CAAC,CACpCxB,cAAc,CAAC,KAAK,CAAC,CACzB,CACJ,CAAC,CAED5B,SAAS,CAAC,IAAM,CAEZ,KAAM,CAAAqD,QAAQ,CAAGhB,YAAY,CAACiB,GAAG,CAAC,KAAK,CAAC,CACxC,KAAM,CAAAC,SAAS,CAAGlB,YAAY,CAACiB,GAAG,CAAC,KAAK,CAAC,CACzC,KAAM,CAAAV,IAAI,CAAGP,YAAY,CAACiB,GAAG,CAAC,MAAM,CAAC,CAErClC,cAAc,CAACoC,UAAU,CAACH,QAAQ,CAAC,CACnCjC,cAAc,CAACqC,UAAU,CAACF,SAAS,CAAC,CACpCnC,cAAc,CAACsC,WAAW,CAACd,IAAI,CAAC,CAEhC,GAAGS,QAAQ,EAAIE,SAAS,CAAC,CACrBnC,cAAc,CAACuC,UAAU,CAAC,IAAI,CAAC,CAC/B/C,SAAS,CAACF,oBAAoB,CAAC2C,QAAQ,CAAEE,SAAS,CAAC,CAAC,CAC/CK,IAAI,CAACC,IAAA,MAAC,CAACC,IAAI,CAAC,CAAAD,IAAA,OAAK,CAAAzC,cAAc,CAAC2C,cAAc,CAACD,IAAI,CAAC,GAAC,CACrDE,KAAK,CAAC,IAAM5C,cAAc,CAAC6C,QAAQ,CAAC,IAAI,CAAC,CAAC,CAC1CC,OAAO,CAAC,IAAM9C,cAAc,CAACuC,UAAU,CAAC,KAAK,CAAC,CAAC,CAEpD/C,SAAS,CAACD,0BAA0B,CAAC0C,QAAQ,CAAEE,SAAS,CAAC,CAAC,CACrDK,IAAI,CAACO,KAAA,MAAC,CAACL,IAAI,CAAC,CAAAK,KAAA,OAAK,CAAA/C,cAAc,CAACgD,gBAAgB,CAACN,IAAI,CAAC,GAAC,CACvDE,KAAK,CAAC,IAAM5C,cAAc,CAAC6C,QAAQ,CAAC,IAAI,CAAC,CAAC,CAC1CC,OAAO,CAAC,IAAM9C,cAAc,CAACuC,UAAU,CAAC,KAAK,CAAC,CAAC,CACxD,CAAC,IACI,CACD,KAAM,CAAAU,OAAO,CAAIC,QAAQ,EAAK,CAE1B,KAAM,CAAA5B,GAAG,CAAG4B,QAAQ,CAACC,MAAM,CAAClB,QAAQ,CACpC,KAAM,CAAAV,GAAG,CAAG2B,QAAQ,CAACC,MAAM,CAAChB,SAAS,CAErCnC,cAAc,CAACoC,UAAU,CAACd,GAAG,CAAC,CAC9BtB,cAAc,CAACqC,UAAU,CAACd,GAAG,CAAC,CAE9BvB,cAAc,CAACuC,UAAU,CAAC,IAAI,CAAC,CAC/B/C,SAAS,gEAAA4D,MAAA,CAAgE9B,GAAG,UAAA8B,MAAA,CAAQ7B,GAAG,uBAAqB,CAAC,CACxGiB,IAAI,CAACE,IAAI,EAAI1C,cAAc,CAACsC,WAAW,CAACI,IAAI,CAACW,OAAO,CAAC7B,IAAI,CAAC,CAAC,CAC3DoB,KAAK,CAAC,IAAM5C,cAAc,CAAC6C,QAAQ,CAAC,IAAI,CAAC,CAAC,CAC1CC,OAAO,CAAC,IAAM9C,cAAc,CAACuC,UAAU,CAAC,KAAK,CAAC,CAAC,CAEpD/C,SAAS,CAACF,oBAAoB,CAACgC,GAAG,CAAEC,GAAG,CAAC,CAAC,CACpCiB,IAAI,CAACc,KAAA,MAAC,CAACZ,IAAI,CAAC,CAAAY,KAAA,OAAK,CAAAtD,cAAc,CAAC2C,cAAc,CAACD,IAAI,CAAC,GAAC,CACrDE,KAAK,CAAC,IAAM5C,cAAc,CAAC6C,QAAQ,CAAC,IAAI,CAAC,CAAC,CAC1CC,OAAO,CAAC,IAAM9C,cAAc,CAACuC,UAAU,CAAC,KAAK,CAAC,CAAC,CAEpD/C,SAAS,CAACD,0BAA0B,CAAC+B,GAAG,CAAEC,GAAG,CAAC,CAAC,CAC1CiB,IAAI,CAACe,KAAA,MAAC,CAACb,IAAI,CAAC,CAAAa,KAAA,OAAK,CAAAvD,cAAc,CAACgD,gBAAgB,CAACN,IAAI,CAAC,GAAC,CACvDE,KAAK,CAAC,IAAM5C,cAAc,CAAC6C,QAAQ,CAAC,IAAI,CAAC,CAAC,CAC1CC,OAAO,CAAC,IAAM9C,cAAc,CAACuC,UAAU,CAAC,KAAK,CAAC,CAAC,CACxD,CAAC,CAED,KAAM,CAAAiB,KAAK,CAAGA,CAAA,GAAM,CAChBxD,cAAc,CAACuC,UAAU,CAAC,KAAK,CAAC,CAChCvC,cAAc,CAAC6C,QAAQ,CAAC,IAAI,CAAC,CACjC,CAAC,CAED,GAAGY,SAAS,CAACC,WAAW,CAAC,CACrBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAACV,OAAO,CAAEO,KAAK,CAAC,CAC5D,CACJ,CAGJ,CAAC,CAAC,EAAE,CAAC,CAEL5E,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAgF,QAAQ,CAAGC,UAAU,CAAC,IAAM,CAC9B,GAAGlD,UAAU,CAACK,MAAM,CAAG,CAAC,CAAC,CACrBxB,SAAS,4CAAA4D,MAAA,CAA4CzC,UAAU,iDAA+C,CAAC,CAC1G6B,IAAI,CAACE,IAAI,EAAI,CACV,KAAM,CAAAoB,cAAc,CAAGpB,IAAI,CAACqB,QAAQ,CAC/BC,MAAM,CAACC,IAAI,EAAI,CACZ,MAAO,CAAAA,IAAI,CAACC,OAAO,GAAK,mBAAmB,EACxCD,IAAI,CAACE,SAAS,GAAK,4BAA4B,EAC/CF,IAAI,CAAC3C,GAAG,EAAI2C,IAAI,CAACG,GAAG,EACpBH,IAAI,CAACI,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,UAAU,CAAC5D,UAAU,CAAC2D,WAAW,CAAC,CAAC,CAAC,CACnE,CAAC,CAAC,CACDE,IAAI,CAAC,CAACC,CAAC,CAACC,CAAC,GAAIA,CAAC,CAACC,UAAU,CAAGF,CAAC,CAACE,UAAU,CAAC,CAC9C,KAAM,CAAAC,oBAAoB,CAAG3F,QAAQ,CAAC6E,cAAc,CAAE,CAACe,EAAE,CAAEC,EAAE,GAAKD,EAAE,CAACR,IAAI,GAAKS,EAAE,CAACT,IAAI,EAAIQ,EAAE,CAACE,UAAU,GAAKD,EAAE,CAACC,UAAU,EAAIF,EAAE,CAACG,WAAW,GAAKF,EAAE,CAACE,WAAW,CAAC,CAC9JJ,oBAAoB,CAAC5D,MAAM,GAAK,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAAGA,QAAQ,CAAC,KAAK,CAAC,CACpE,GAAGsE,oBAAoB,CAAC5D,MAAM,EAAI,CAAC,CAAC,CAChCZ,cAAc,CAACwE,oBAAoB,CAAC,CACxC,CACA,GAAGA,oBAAoB,CAAC5D,MAAM,CAAG,CAAC,EAAI4D,oBAAoB,CAAC5D,MAAM,CAAG,EAAE,CAAC,CACnEZ,cAAc,CAACwE,oBAAoB,CAACK,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,CAAC,CACpD,CACA,GAAGL,oBAAoB,CAAC5D,MAAM,CAAG,EAAE,EAAI4D,oBAAoB,CAAC5D,MAAM,CAAG,EAAE,CAAC,CACpEZ,cAAc,CAACwE,oBAAoB,CAACK,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CAAC,CACrD,CACA,GAAGL,oBAAoB,CAAC5D,MAAM,CAAG,EAAE,EAAI4D,oBAAoB,CAAC5D,MAAM,CAAG,EAAE,CAAC,CACpEZ,cAAc,CAACwE,oBAAoB,CAACK,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CAAC,CACrD,CACA,GAAGL,oBAAoB,CAAC5D,MAAM,CAAG,EAAE,EAAI4D,oBAAoB,CAAC5D,MAAM,CAAG,EAAE,CAAC,CACpEZ,cAAc,CAACwE,oBAAoB,CAACK,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CAAC,CACrD,CACA,GAAGL,oBAAoB,CAAC5D,MAAM,CAAG,EAAE,CAAC,CAChCZ,cAAc,CAACwE,oBAAoB,CAACK,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CAAC,CACrD,CACAnE,UAAU,CAAC,CAAC,CAAC,CAAC,CAClB,CAAC,CAAC,CACD8B,KAAK,CAAC,IAAM5C,cAAc,CAAC6C,QAAQ,CAAC,IAAI,CAAC,CAAC,CACnD,CAAC,IACG,CACAzC,cAAc,CAAC,EAAE,CAAC,CAClBE,QAAQ,CAAC,KAAK,CAAC,CACnB,CACJ,CAAC,CAAC,IAAI,CAAC,CAEP,MAAO,IAAM4E,YAAY,CAACtB,QAAQ,CAAC,CAEvC,CAAC,CAAC,CAACjD,UAAU,CAAC,CAAC,CAEf,KAAM,CAAAwE,WAAW,CAAItD,CAAC,EAAK,CACvBjB,aAAa,CAACiB,CAAC,CAACG,MAAM,CAACoD,KAAK,CAAC,CACjC,CAAC,CAED,KAAM,CAAAC,iBAAiB,CAAIC,IAAI,EAAK,CAEhCtF,cAAc,CAACoC,UAAU,CAACkD,IAAI,CAAChE,GAAG,CAAC,CACnCtB,cAAc,CAACqC,UAAU,CAACiD,IAAI,CAAClB,GAAG,CAAC,CACnCpE,cAAc,CAACsC,WAAW,CAACgD,IAAI,CAACjB,IAAI,CAAC,CACrCzD,aAAa,CAAC,EAAE,CAAC,CACjBR,cAAc,CAAC,EAAE,CAAC,CAClBqB,MAAM,CAAC8D,QAAQ,CAAC,CAAEC,GAAG,CAAE,CAAC,CAAEC,QAAQ,CAAE,QAAS,CAAC,CAAC,CAC/C,GAAG1F,QAAQ,CAAC2F,QAAQ,GAAK,EAAE,CAAC,CACxB5F,QAAQ,CAAC,GAAG,CAAC,CACjB,CACAE,cAAc,CAACuC,UAAU,CAAC,IAAI,CAAC,CAC/B/C,SAAS,CAACF,oBAAoB,CAACgG,IAAI,CAAChE,GAAG,CAAEgE,IAAI,CAAClB,GAAG,CAAC,CAAC,CAC9C5B,IAAI,CAACmD,KAAA,MAAC,CAACjD,IAAI,CAAC,CAAAiD,KAAA,OAAK,CAAA3F,cAAc,CAAC2C,cAAc,CAACD,IAAI,CAAC,GAAC,CACrDE,KAAK,CAAC,IAAM5C,cAAc,CAAC6C,QAAQ,CAAC,IAAI,CAAC,CAAC,CAC1CC,OAAO,CAAC,IAAM9C,cAAc,CAACuC,UAAU,CAAC,KAAK,CAAC,CAAC,CAEpD/C,SAAS,CAACD,0BAA0B,CAAC+F,IAAI,CAAChE,GAAG,CAAEgE,IAAI,CAAClB,GAAG,CAAC,CAAC,CACpD5B,IAAI,CAACoD,KAAA,MAAC,CAAClD,IAAI,CAAC,CAAAkD,KAAA,OAAK,CAAA5F,cAAc,CAACgD,gBAAgB,CAACN,IAAI,CAAC,GAAC,CACvDE,KAAK,CAAC,IAAM5C,cAAc,CAAC6C,QAAQ,CAAC,IAAI,CAAC,CAAC,CAC1CC,OAAO,CAAC,IAAM9C,cAAc,CAACuC,UAAU,CAAC,KAAK,CAAC,CAAC,CACxD,CAAC,CAED,KAAM,CAAAsD,KAAK,CAAIhE,CAAC,EAAK,CACjB,GAAGA,CAAC,CAACiE,GAAG,GAAK,OAAO,CAAC,CACjBT,iBAAiB,CAAC5E,YAAY,CAAC,CAC/BR,QAAQ,CAAC6B,OAAO,CAACiE,IAAI,CAAC,CAAC,CAC3B,CACA,GAAGlE,CAAC,CAACiE,GAAG,GAAK,WAAW,EAAIjF,OAAO,CAAGV,WAAW,CAACa,MAAM,CAAG,CAAC,CAAC,CACzDa,CAAC,CAACmE,cAAc,CAAC,CAAC,CAClBlF,UAAU,CAAEmF,IAAI,EAAKA,IAAI,CAAG,CAAC,CAAC,CAC9BvF,eAAe,CAACP,WAAW,CAACU,OAAO,CAAG,CAAC,CAAC,CAAC,CAC7C,CACA,GAAGgB,CAAC,CAACiE,GAAG,GAAK,SAAS,EAAIjF,OAAO,EAAI,CAAC,CAAC,CACnCgB,CAAC,CAACmE,cAAc,CAAC,CAAC,CAClBlF,UAAU,CAAEmF,IAAI,EAAKA,IAAI,CAAG,CAAC,CAAC,CAC9BvF,eAAe,CAACP,WAAW,CAACU,OAAO,CAAG,CAAC,CAAC,CAAC,CAC7C,CAEA,GAAGgB,CAAC,CAACiE,GAAG,GAAK,WAAW,EAAIjF,OAAO,CAAG,CAAC,EAAIqF,MAAM,CAACC,SAAS,CAAC,CAACtF,OAAO,CAAG,CAAC,EAAI,CAAC,CAAC,CAAC,CAC3EgB,CAAC,CAACmE,cAAc,CAAC,CAAC,CAClB9F,SAAS,CAAC4B,OAAO,CAACsE,QAAQ,CAAC,CAAEZ,GAAG,CAAE,GAAG,CAAEC,QAAQ,CAAE,QAAS,CAAC,CAAC,CAChE,CAEA,GAAG5D,CAAC,CAACiE,GAAG,GAAK,SAAS,EAAIjF,OAAO,CAAG,CAAC,GAAK,CAAC,CAAC,CACxCgB,CAAC,CAACmE,cAAc,CAAC,CAAC,CAClB9F,SAAS,CAAC4B,OAAO,CAACsE,QAAQ,CAAC,CAAEZ,GAAG,CAAE,CAAC,GAAG,CAAEC,QAAQ,CAAE,QAAS,CAAC,CAAC,CACjE,CACJ,CAAC,CAED,KAAM,CAAAY,YAAY,CAAGA,CAACf,IAAI,CAAEgB,KAAK,GAAK,CAClC5F,eAAe,CAAC4E,IAAI,CAAC,CACrBxE,UAAU,CAACwF,KAAK,CAAC,CACrB,CAAC,CAED,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CACxBjG,QAAQ,CAAC,KAAK,CAAC,CACfF,cAAc,CAAC,EAAE,CAAC,CAClBQ,aAAa,CAAC,EAAE,CAAC,CACjBX,QAAQ,CAAC6B,OAAO,CAAC0E,KAAK,CAAC,CAAC,CAC5B,CAAC,CAED,KAAM,CAAAC,cAAc,CAAI5E,CAAC,EAAK,CAC1BA,CAAC,CAAC6E,eAAe,CAAC,CAAC,CACnBzG,QAAQ,CAAC6B,OAAO,CAAC0E,KAAK,CAAC,CAAC,CAC5B,CAAC,CAED,mBACA5G,KAAA,QAAK+G,SAAS,CAAC,gBAAgB,CAAAC,QAAA,EAC1B5G,cAAc,CAAC6G,SAAS,eAAInH,IAAA,CAACN,OAAO,GAAE,CAAC,CACvCY,cAAc,CAAC8G,OAAO,eAAIpH,IAAA,CAACL,UAAU,GAAE,CAAC,cACzCO,KAAA,QAAK+G,SAAS,CAAC,cAAc,CAAAC,QAAA,eACzBlH,IAAA,UACIqH,GAAG,CAAE9G,QAAS,CACdmF,KAAK,CAAEzE,UAAW,CAClBgG,SAAS,CAAC,cAAc,CACxBK,WAAW,CAAC,oCAAqB,CACjCC,IAAI,CAAC,MAAM,CACXC,OAAO,CAAE/B,WAAY,CACrBgC,OAAO,CAAEA,CAAA,GAAM3G,cAAc,CAAC,IAAI,CAAE,CACpC4G,QAAQ,CAAEA,CAAA,GAAM5G,cAAc,CAAC,IAAI,CAAE,CACrC6G,SAAS,CAAExB,KAAM,CACpB,CAAC,CACD9E,cAAc,eAAIrB,IAAA,QAAK4H,OAAO,CAAEf,aAAc,CAACgB,GAAG,CAAEpI,UAAW,CAACqI,GAAG,CAAC,aAAa,CAAE,CAAC,EACpF,CAAC,cACN5H,KAAA,OAAI+G,SAAS,CAAEpG,aAAa,CAAG,sBAAsB,CAAG,eAAgB,CAACwG,GAAG,CAAE7G,SAAU,CAAA0G,QAAA,EACnFvG,OAAO,eAAIX,IAAA,OAAIiH,SAAS,CAAC,WAAW,CAACW,OAAO,CAAEb,cAAe,CAAAG,QAAA,CAAC,gBAAc,CAAI,CAAC,CACjFzG,WAAW,CAACsH,GAAG,CAAC,CAACnC,IAAI,CAAEgB,KAAK,gBAC7B1G,KAAA,OAEI0H,OAAO,CAAEA,CAAA,GAAMjC,iBAAiB,CAACC,IAAI,CAAE,CACvCe,YAAY,CAAEA,CAAA,GAAMA,YAAY,CAACf,IAAI,CAAEgB,KAAK,CAAE,CAC9CK,SAAS,CAAEL,KAAK,GAAKzF,OAAO,CAAG,SAAS,CAAG,EAAG,CAAA+F,QAAA,eAE9ClH,IAAA,OAAAkH,QAAA,CAAKtB,IAAI,CAACjB,IAAI,CAAK,CAAC,cACpBzE,KAAA,QAAK+G,SAAS,CAAC,cAAc,CAAAC,QAAA,EACxBtB,IAAI,CAACP,UAAU,eAAInF,KAAA,MAAAgH,QAAA,EAAItB,IAAI,CAACP,UAAU,CAAC,GAAC,EAAG,CAAC,CAC5CO,IAAI,CAACN,WAAW,eAAItF,IAAA,MAAAkH,QAAA,CAAItB,IAAI,CAACN,WAAW,CAAI,CAAC,EAC7C,CAAC,GATDsB,KAUL,CAAC,CAAC,EACN,CAAC,EACJ,CAAC,CAEN"},"metadata":{},"sourceType":"module","externalDependencies":[]}