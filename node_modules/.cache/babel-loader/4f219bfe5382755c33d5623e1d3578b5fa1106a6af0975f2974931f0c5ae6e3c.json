{"ast":null,"code":"const getCurrentWeather = (lat, lon, setWeatherData, setLoading, setError) => {\n  // setLoading(true)\n  fetch(`https://api.weatherbit.io/v2.0/current?lat=${lat}&lon=${lon}&key=c2d3c64087e54d018cae06444bf6a848`).then(data => data.json()).then(data => {\n    setWeatherData(data.data);\n    // setLoading(false)\n  }).catch(() => {\n    setLoading(false);\n    setError(true);\n  }).finally(() => setLoading(false));\n};\nconst getCurrentWeatherHourly = (lat, lon, setWeatherHourly, setLoading, setError) => {\n  fetch(`https://api.weatherbit.io/v2.0/forecast/hourly?lat=${lat}&lon=${lon}&key=c2d3c64087e54d018cae06444bf6a848`).then(data => data.json()).then(data => setWeatherHourly(data.data)).catch(() => {\n    setLoading(false);\n    setError(true);\n  }).finally(() => setLoading(false));\n};\nconst getCurrentNameCity = (lat, lon, setNameCity, setLoading, setError) => {\n  fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lon}&accept-language=en`).then(data => data.json()).then(data => {\n    setNameCity(data.address.city);\n    setLoading(false);\n  }).catch(() => {\n    setLoading(false);\n    setError(true);\n  }).finally(() => setLoading(false));\n};\nconst getCurrentOptionsCities = () => {\n  fetch(`http://api.geonames.org/searchJSON?name=${inputValue}&maxRows=100&username=mkskhjwssofwfjjcjw00&&&`) // lang=ru\n  .then(data => data.json()).then(data => {\n    const filteredCities = data.geonames.filter(filt => {\n      return filt.fclName === \"city, village,...\" && filt.fcodeName !== \"section of populated place\" && filt.lat && filt.lng && filt.name.toLowerCase().startsWith(inputValue.toLowerCase());\n    }).sort((a, b) => b.population - a.population);\n    const uniqueFilteredCities = uniqueBy(filteredCities, (o1, o2) => o1.name === o2.name && o1.adminName1 === o2.adminName1 && o1.countryName === o2.countryName);\n    uniqueFilteredCities.length === 0 ? setFound(true) : setFound(false);\n    if (uniqueFilteredCities.length <= 6) {\n      setCityOptions(uniqueFilteredCities);\n    }\n    if (uniqueFilteredCities.length > 6 && uniqueFilteredCities.length < 12) {\n      setCityOptions(uniqueFilteredCities.slice(0, 6));\n    }\n    if (uniqueFilteredCities.length > 12 && uniqueFilteredCities.length < 18) {\n      setCityOptions(uniqueFilteredCities.slice(0, 12));\n    }\n    if (uniqueFilteredCities.length > 18 && uniqueFilteredCities.length < 24) {\n      setCityOptions(uniqueFilteredCities.slice(0, 18));\n    }\n    if (uniqueFilteredCities.length > 24 && uniqueFilteredCities.length < 30) {\n      setCityOptions(uniqueFilteredCities.slice(0, 24));\n    }\n    if (uniqueFilteredCities.length > 30) {\n      setCityOptions(uniqueFilteredCities.slice(0, 30));\n    }\n    setCounter(-1);\n  }).catch(() => alert('error when searching for lists of cities'));\n};\nexport { getCurrentWeather, getCurrentWeatherHourly, getCurrentNameCity };","map":{"version":3,"names":["getCurrentWeather","lat","lon","setWeatherData","setLoading","setError","fetch","then","data","json","catch","finally","getCurrentWeatherHourly","setWeatherHourly","getCurrentNameCity","setNameCity","address","city","getCurrentOptionsCities","inputValue","filteredCities","geonames","filter","filt","fclName","fcodeName","lng","name","toLowerCase","startsWith","sort","a","b","population","uniqueFilteredCities","uniqueBy","o1","o2","adminName1","countryName","length","setFound","setCityOptions","slice","setCounter","alert"],"sources":["C:/Users/Gold/Desktop/test/src/helper/apiWeather.js"],"sourcesContent":["const getCurrentWeather = (lat, lon, setWeatherData, setLoading, setError) => {\r\n    // setLoading(true)\r\n    fetch(`https://api.weatherbit.io/v2.0/current?lat=${lat}&lon=${lon}&key=c2d3c64087e54d018cae06444bf6a848`)\r\n    .then(data => data.json())\r\n    .then(data => {\r\n        setWeatherData(data.data)\r\n        // setLoading(false)\r\n    })\r\n    .catch(() => {\r\n        setLoading(false)\r\n        setError(true)\r\n    })\r\n    .finally(() => setLoading(false))\r\n}\r\n\r\nconst getCurrentWeatherHourly = (lat, lon, setWeatherHourly, setLoading, setError) => {\r\n    fetch(`https://api.weatherbit.io/v2.0/forecast/hourly?lat=${lat}&lon=${lon}&key=c2d3c64087e54d018cae06444bf6a848`)\r\n        .then(data => data.json())\r\n        .then(data => setWeatherHourly(data.data))\r\n        .catch(() => {\r\n            setLoading(false)\r\n            setError(true)\r\n        })\r\n        .finally(() => setLoading(false))\r\n}\r\n\r\nconst getCurrentNameCity = (lat, lon, setNameCity, setLoading, setError) => {\r\n    fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lon}&accept-language=en`)\r\n        .then(data => data.json())\r\n        .then(data => {\r\n            setNameCity(data.address.city)\r\n            setLoading(false)\r\n        })\r\n        .catch(() => {\r\n            setLoading(false)\r\n            setError(true)\r\n        })\r\n        .finally(() => setLoading(false))\r\n}\r\n\r\nconst getCurrentOptionsCities = () => {\r\n    fetch(`http://api.geonames.org/searchJSON?name=${inputValue}&maxRows=100&username=mkskhjwssofwfjjcjw00&&&`)  // lang=ru\r\n            .then(data => data.json())\r\n            .then(data => {\r\n                const filteredCities = data.geonames\r\n                    .filter(filt => {\r\n                        return filt.fclName === \"city, village,...\" \r\n                        && filt.fcodeName !== \"section of populated place\" \r\n                        && filt.lat && filt.lng \r\n                        && filt.name.toLowerCase().startsWith(inputValue.toLowerCase())\r\n                    })\r\n                    .sort((a,b)=> b.population - a.population)\r\n                const uniqueFilteredCities = uniqueBy(filteredCities, (o1, o2) => o1.name === o2.name && o1.adminName1 === o2.adminName1 && o1.countryName === o2.countryName)\r\n                uniqueFilteredCities.length === 0 ? setFound(true) : setFound(false)\r\n                if(uniqueFilteredCities.length <= 6){\r\n                    setCityOptions(uniqueFilteredCities)\r\n                }\r\n                if(uniqueFilteredCities.length > 6 && uniqueFilteredCities.length < 12){\r\n                    setCityOptions(uniqueFilteredCities.slice(0, 6))\r\n                }\r\n                if(uniqueFilteredCities.length > 12 && uniqueFilteredCities.length < 18){\r\n                    setCityOptions(uniqueFilteredCities.slice(0, 12))\r\n                }\r\n                if(uniqueFilteredCities.length > 18 && uniqueFilteredCities.length < 24){\r\n                    setCityOptions(uniqueFilteredCities.slice(0, 18))\r\n                }\r\n                if(uniqueFilteredCities.length > 24 && uniqueFilteredCities.length < 30){\r\n                    setCityOptions(uniqueFilteredCities.slice(0, 24))\r\n                }\r\n                if(uniqueFilteredCities.length > 30){\r\n                    setCityOptions(uniqueFilteredCities.slice(0, 30))\r\n                }\r\n                setCounter(-1)\r\n            })\r\n            .catch(() => alert('error when searching for lists of cities'))\r\n}\r\n\r\nexport {getCurrentWeather, getCurrentWeatherHourly, getCurrentNameCity}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}