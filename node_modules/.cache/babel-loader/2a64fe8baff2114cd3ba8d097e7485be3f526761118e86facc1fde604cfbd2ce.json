{"ast":null,"code":"import React,{useContext,useEffect}from'react';import'./WeatherForecast.css';import NavigationWeatherForecast from'./NavigationWeatherForecast/NavigationWeatherForecast';import ContentWeatherForecast from'./ContentWeatherForecast/ContentWeatherForecast';import WeatherContext from'../../helper/weatherContext';import{getCurrentWeatherDailyUrl}from'../../helper/apiWeather';import fetchData from'../../helper/fetchData';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function WeatherForecast(){const weatherContext=useContext(WeatherContext);useEffect(()=>{if(weatherContext.latCity&&weatherContext.lonCity){weatherContext.setLoading(true);fetchData(getCurrentWeatherDailyUrl(weatherContext.latCity,weatherContext.lonCity)).then(_ref=>{let{data}=_ref;return weatherContext.setWeatherSixteenDays(data);}).catch(()=>weatherContext.setError(true)).finally(()=>weatherContext.setLoading(false));}},[weatherContext.latCity,weatherContext.lonCity]);return/*#__PURE__*/_jsxs(\"div\",{className:\"weather-forecast\",children:[/*#__PURE__*/_jsx(NavigationWeatherForecast,{}),/*#__PURE__*/_jsx(ContentWeatherForecast,{})]});}","map":{"version":3,"names":["React","useContext","useEffect","NavigationWeatherForecast","ContentWeatherForecast","WeatherContext","getCurrentWeatherDailyUrl","fetchData","jsx","_jsx","jsxs","_jsxs","WeatherForecast","weatherContext","latCity","lonCity","setLoading","then","_ref","data","setWeatherSixteenDays","catch","setError","finally","className","children"],"sources":["C:/Users/Gold/Desktop/weather/src/Section/WeatherForecast/WeatherForecast.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react'\r\nimport './WeatherForecast.css'\r\nimport NavigationWeatherForecast from './NavigationWeatherForecast/NavigationWeatherForecast'\r\nimport ContentWeatherForecast from './ContentWeatherForecast/ContentWeatherForecast'\r\nimport WeatherContext from '../../helper/weatherContext'\r\nimport { getCurrentWeatherDailyUrl } from '../../helper/apiWeather'\r\nimport fetchData from '../../helper/fetchData'\r\n\r\nexport default function WeatherForecast() {\r\n\r\n    const weatherContext = useContext(WeatherContext)\r\n\r\n    useEffect(() => {\r\n        if(weatherContext.latCity && weatherContext.lonCity){\r\n            weatherContext.setLoading(true)\r\n            fetchData(getCurrentWeatherDailyUrl(weatherContext.latCity, weatherContext.lonCity))\r\n                .then(({data}) => weatherContext.setWeatherSixteenDays(data))\r\n                .catch(() => weatherContext.setError(true))\r\n                .finally(() => weatherContext.setLoading(false))\r\n        }\r\n    }, [weatherContext.latCity, weatherContext.lonCity])\r\n\r\n    return (\r\n    <div className='weather-forecast'>\r\n        <NavigationWeatherForecast />\r\n        <ContentWeatherForecast />\r\n    </div>\r\n    )\r\n}\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,UAAU,CAAEC,SAAS,KAAQ,OAAO,CACpD,MAAO,uBAAuB,CAC9B,MAAO,CAAAC,yBAAyB,KAAM,uDAAuD,CAC7F,MAAO,CAAAC,sBAAsB,KAAM,iDAAiD,CACpF,MAAO,CAAAC,cAAc,KAAM,6BAA6B,CACxD,OAASC,yBAAyB,KAAQ,yBAAyB,CACnE,MAAO,CAAAC,SAAS,KAAM,wBAAwB,QAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE9C,cAAe,SAAS,CAAAC,eAAeA,CAAA,CAAG,CAEtC,KAAM,CAAAC,cAAc,CAAGZ,UAAU,CAACI,cAAc,CAAC,CAEjDH,SAAS,CAAC,IAAM,CACZ,GAAGW,cAAc,CAACC,OAAO,EAAID,cAAc,CAACE,OAAO,CAAC,CAChDF,cAAc,CAACG,UAAU,CAAC,IAAI,CAAC,CAC/BT,SAAS,CAACD,yBAAyB,CAACO,cAAc,CAACC,OAAO,CAAED,cAAc,CAACE,OAAO,CAAC,CAAC,CAC/EE,IAAI,CAACC,IAAA,MAAC,CAACC,IAAI,CAAC,CAAAD,IAAA,OAAK,CAAAL,cAAc,CAACO,qBAAqB,CAACD,IAAI,CAAC,GAAC,CAC5DE,KAAK,CAAC,IAAMR,cAAc,CAACS,QAAQ,CAAC,IAAI,CAAC,CAAC,CAC1CC,OAAO,CAAC,IAAMV,cAAc,CAACG,UAAU,CAAC,KAAK,CAAC,CAAC,CACxD,CACJ,CAAC,CAAE,CAACH,cAAc,CAACC,OAAO,CAAED,cAAc,CAACE,OAAO,CAAC,CAAC,CAEpD,mBACAJ,KAAA,QAAKa,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC7BhB,IAAA,CAACN,yBAAyB,GAAE,CAAC,cAC7BM,IAAA,CAACL,sBAAsB,GAAE,CAAC,EACzB,CAAC,CAEV"},"metadata":{},"sourceType":"module","externalDependencies":[]}