{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gold\\\\Desktop\\\\weather\\\\src\\\\Header\\\\Input\\\\InputSearch.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useContext, useEffect, useRef } from 'react';\nimport { useLocation, useNavigate, useSearchParams } from 'react-router-dom';\n// import {uniqueBy} from '../../helper/filter-repeat'\nimport WeatherContext from '../../helper/weatherContext';\nimport closeIcons from '../../images/close_icon.png';\nimport './InputSearch.css';\nimport Loading from '../../components/Loading';\nimport ErrorFetch from '../../components/ErrorFetch';\nimport { getCurrentWeather, getCurrentWeatherHourly, getCurrentNameCity, getCurrentOptionsCities, fetchData, getCurrentWeatherUrl } from '../../helper/apiWeather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InputSearch() {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const weatherContext = useContext(WeatherContext);\n  const inputRef = useRef();\n  const optionRef = useRef();\n  const [cityOptions, setCityOptions] = useState([]);\n  const [isFound, setFound] = useState(false);\n  const [isActiveInput, setActiveInput] = useState(false);\n  const [cityLocation, setCityLocation] = useState(null);\n  const [inputValue, setInputValue] = useState('');\n  const [counter, setCounter] = useState(-1);\n  const isActiveDelete = inputValue.length > 0;\n  const [searchParams, setSearchParams] = useSearchParams();\n  useEffect(() => {\n    if (weatherContext.nameCity && weatherContext.latCity && weatherContext.lonCity) {\n      setSearchParams({\n        lat: weatherContext.latCity,\n        lon: weatherContext.lonCity,\n        city: weatherContext.nameCity\n      });\n    }\n  }, [weatherContext.nameCity, weatherContext.latCity, weatherContext.lonCity]);\n  useEffect(() => {\n    window.addEventListener('click', onClickOutsideInput);\n    return () => window.removeEventListener('click', onClickOutsideInput);\n  }, []);\n  const onClickOutsideInput = e => {\n    if (!inputRef.current.contains(e.target)) {\n      setActiveInput(false);\n    }\n  };\n  useEffect(() => {\n    const latitude = searchParams.get('lat');\n    const longitude = searchParams.get('lon');\n    const city = searchParams.get('city');\n    weatherContext.setLatCity(latitude);\n    weatherContext.setLonCity(longitude);\n    weatherContext.setNameCity(city);\n    if (latitude && longitude) {\n      // fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&accept-language=en`)\n      // .then(data => data.json())\n      // .then(data => {\n      //     console.log(data)\n      //     weatherContext.setNameCity(data.address.city)\n      //     weatherContext.setLoading(false)\n      // })\n      // .catch(() => {\n      //     weatherContext.setLoading(false)\n      //     weatherContext.setError(true)\n      // })\n\n      weatherContext.setLoading(true);\n      getCurrentWeather(latitude, longitude).then(({\n        data\n      }) => weatherContext.setWeatherData(data)).catch(() => weatherContext.setError(true)).finally(() => weatherContext.setLoading(false));\n\n      // weatherContext.setLoading(true)\n      // fetch(`https://api.weatherbit.io/v2.0/current?lat=${latitude}&lon=${longitude}&key=c2d3c64087e54d018cae06444bf6a848`)\n      // .then(data => data.json())\n      // .then(data => {\n      //     weatherContext.setWeatherData(data.data)\n      //     weatherContext.setLoading(false)\n      // })\n      // .catch(() => {\n      //     weatherContext.setLoading(false)\n      //     weatherContext.setError(true)\n      // })\n\n      getCurrentWeatherHourly(latitude, longitude, weatherContext.setWeatherHourly, weatherContext.setLoading, weatherContext.setError);\n\n      // fetch(`https://api.weatherbit.io/v2.0/forecast/hourly?lat=${latitude}&lon=${longitude}&key=c2d3c64087e54d018cae06444bf6a848`)\n      // .then(data => data.json())\n      // .then(data => weatherContext.setWeatherHourly(data.data))\n      // .catch(() => {\n      //     weatherContext.setLoading(false)\n      //     weatherContext.setError(true)\n      // })\n    } else {\n      const success = position => {\n        const lat = position.coords.latitude;\n        const lon = position.coords.longitude;\n        weatherContext.setLatCity(lat);\n        weatherContext.setLonCity(lon);\n        weatherContext.setLoading(true);\n        getCurrentNameCity(lat, lon, weatherContext.setNameCity, weatherContext.setLoading, weatherContext.setError);\n\n        // fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lon}&accept-language=en`)\n        // .then(data => data.json())\n        // .then(data => {\n        //     weatherContext.setNameCity(data.address.city)\n        //     weatherContext.setLoading(false)\n        // })\n        // .catch(() => {\n        //     weatherContext.setLoading(false)\n        //     weatherContext.setError(true)\n        // })\n\n        // getCurrentWeather(lat, lon, weatherContext.setWeatherData, weatherContext.setLoading, weatherContext.setError)\n\n        fetchData(getCurrentWeatherUrl(lat, lon)).then(({\n          data\n        }) => weatherContext.setWeatherData(data)).catch(() => weatherContext.setError(true)).finally(() => weatherContext.setLoading(false));\n\n        // fetch(`https://api.weatherbit.io/v2.0/current?lat=${lat}&lon=${lon}&key=c2d3c64087e54d018cae06444bf6a848`)\n        // .then(data => data.json())\n        // .then(data => weatherContext.setWeatherData(data.data))\n        // .catch(() => {\n        //     weatherContext.setLoading(false)\n        //     weatherContext.setError(true)\n        // })\n\n        getCurrentWeatherHourly(lat, lon, weatherContext.setWeatherHourly, weatherContext.setLoading, weatherContext.setError);\n\n        // fetch(`https://api.weatherbit.io/v2.0/forecast/hourly?lat=${lat}&lon=${lon}&key=c2d3c64087e54d018cae06444bf6a848`)\n        // .then(data => data.json())\n        // .then(data => weatherContext.setWeatherHourly(data.data))\n        // .catch(() => {\n        //     weatherContext.setLoading(false)\n        //     weatherContext.setError(true)\n        // })\n      };\n      const error = () => {\n        weatherContext.setLoading(false);\n        weatherContext.setError(true);\n      };\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(success, error);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    const debounce = setTimeout(() => {\n      if (inputValue.length > 0) {\n        getCurrentOptionsCities(inputValue, setFound, setCityOptions, setCounter);\n        // fetch(`http://api.geonames.org/searchJSON?name=${inputValue}&maxRows=100&username=mkskhjwssofwfjjcjw00&&&`)  // lang=ru\n        // .then(data => data.json())\n        // .then(data => {\n        //     const filteredCities = data.geonames\n        //         .filter(filt => {\n        //             return filt.fclName === \"city, village,...\" \n        //             && filt.fcodeName !== \"section of populated place\" \n        //             && filt.lat && filt.lng \n        //             && filt.name.toLowerCase().startsWith(inputValue.toLowerCase())\n        //         })\n        //         .sort((a,b)=> b.population - a.population)\n        //     const uniqueFilteredCities = uniqueBy(filteredCities, (o1, o2) => o1.name === o2.name && o1.adminName1 === o2.adminName1 && o1.countryName === o2.countryName)\n        //     uniqueFilteredCities.length === 0 ? setFound(true) : setFound(false)\n        //     if(uniqueFilteredCities.length <= 6){\n        //         setCityOptions(uniqueFilteredCities)\n        //     }\n        //     if(uniqueFilteredCities.length > 6 && uniqueFilteredCities.length < 12){\n        //         setCityOptions(uniqueFilteredCities.slice(0, 6))\n        //     }\n        //     if(uniqueFilteredCities.length > 12 && uniqueFilteredCities.length < 18){\n        //         setCityOptions(uniqueFilteredCities.slice(0, 12))\n        //     }\n        //     if(uniqueFilteredCities.length > 18 && uniqueFilteredCities.length < 24){\n        //         setCityOptions(uniqueFilteredCities.slice(0, 18))\n        //     }\n        //     if(uniqueFilteredCities.length > 24 && uniqueFilteredCities.length < 30){\n        //         setCityOptions(uniqueFilteredCities.slice(0, 24))\n        //     }\n        //     if(uniqueFilteredCities.length > 30){\n        //         setCityOptions(uniqueFilteredCities.slice(0, 30))\n        //     }\n        //     setCounter(-1)\n        // })\n        // .catch(() => alert('error when searching for lists of cities'))\n      } else {\n        setCityOptions([]);\n        setFound(false);\n      }\n    }, 1000);\n    return () => clearTimeout(debounce);\n  }, [inputValue]);\n  const handleInput = e => {\n    setInputValue(e.target.value);\n  };\n  const handleSearchClick = item => {\n    weatherContext.setLatCity(item.lat);\n    weatherContext.setLonCity(item.lng);\n    weatherContext.setNameCity(item.name);\n    setInputValue('');\n    setCityOptions([]);\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n    if (location.pathname !== '') {\n      navigate('/');\n    }\n    weatherContext.setError(false);\n    weatherContext.setLoading(true);\n    getCurrentWeather(item.lat, item.lng, weatherContext.setWeatherData, weatherContext.setLoading, weatherContext.setError);\n\n    // fetch(`https://api.weatherbit.io/v2.0/current?lat=${item.lat}&lon=${item.lng}&key=c2d3c64087e54d018cae06444bf6a848`)\n    // .then(response  => response.json())\n    // .then(response  => {\n    //     weatherContext.setWeatherData(response.data)\n    // })\n    // .catch(() => {\n    //     weatherContext.setLoading(false)\n    //     weatherContext.setError(true)\n    // })\n    // .finally(() => weatherContext.setLoading(false))\n\n    getCurrentWeatherHourly(item.lat, item.lng, weatherContext.setWeatherHourly, weatherContext.setLoading, weatherContext.setError);\n\n    // fetch(`https://api.weatherbit.io/v2.0/forecast/hourly?lat=${item.lat}&lon=${item.lng}&key=c2d3c64087e54d018cae06444bf6a848`)\n    //     .then(data => data.json())\n    //     .then(data => weatherContext.setWeatherHourly(data.data))\n    //     .catch(() => {\n    //         weatherContext.setLoading(false)\n    //         weatherContext.setError(true)\n    //     })\n  };\n  const onKey = e => {\n    if (e.key === 'Enter') {\n      handleSearchClick(cityLocation);\n      inputRef.current.blur();\n    }\n    if (e.key === 'ArrowDown' && counter < cityOptions.length - 1) {\n      e.preventDefault();\n      setCounter(prev => prev + 1);\n      setCityLocation(cityOptions[counter + 1]);\n    }\n    if (e.key === 'ArrowUp' && counter >= 0) {\n      e.preventDefault();\n      setCounter(prev => prev - 1);\n      setCityLocation(cityOptions[counter - 1]);\n    }\n    if (e.key === 'ArrowDown' && counter > 0 && Number.isInteger((counter + 1) / 6)) {\n      e.preventDefault();\n      optionRef.current.scrollBy({\n        top: 300,\n        behavior: 'smooth'\n      });\n    }\n    if (e.key === 'ArrowUp' && counter % 6 === 0) {\n      e.preventDefault();\n      optionRef.current.scrollBy({\n        top: -300,\n        behavior: 'smooth'\n      });\n    }\n  };\n  const onMouseEnter = (item, index) => {\n    setCityLocation(item);\n    setCounter(index);\n  };\n  const onClickDelete = () => {\n    setFound(false);\n    setCityOptions([]);\n    setInputValue('');\n    inputRef.current.focus();\n  };\n  const onClickIsFound = e => {\n    e.stopPropagation();\n    inputRef.current.focus();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-wrapper\",\n    children: [weatherContext.isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 34\n    }, this), weatherContext.isError && /*#__PURE__*/_jsxDEV(ErrorFetch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        value: inputValue,\n        className: \"input-search\",\n        placeholder: \"\\uD83D\\uDD0D\\uFE0E Search location\",\n        type: \"text\",\n        onInput: handleInput,\n        onFocus: () => setActiveInput(true),\n        onChange: () => setActiveInput(true),\n        onKeyDown: onKey\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), isActiveDelete && /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: onClickDelete,\n        src: closeIcons,\n        alt: \"delete_text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: isActiveInput ? 'lists-wrapper active' : 'lists-wrapper',\n      ref: optionRef,\n      children: [isFound && /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"not-found\",\n        onClick: onClickIsFound,\n        children: \"city not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 21\n      }, this), cityOptions.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleSearchClick(item),\n        onMouseEnter: () => onMouseEnter(item, index),\n        className: index === counter ? 'focused' : '',\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"city-details\",\n          children: [item.adminName1 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [item.adminName1, \",\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 37\n          }, this), item.countryName && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.countryName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 1\n  }, this);\n}\n_s(InputSearch, \"KQqYjdb/GXh4AVdPnXPflMGAbuo=\", false, function () {\n  return [useNavigate, useLocation, useSearchParams];\n});\n_c = InputSearch;\nvar _c;\n$RefreshReg$(_c, \"InputSearch\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useRef","useLocation","useNavigate","useSearchParams","WeatherContext","closeIcons","Loading","ErrorFetch","getCurrentWeather","getCurrentWeatherHourly","getCurrentNameCity","getCurrentOptionsCities","fetchData","getCurrentWeatherUrl","jsxDEV","_jsxDEV","InputSearch","_s","navigate","location","weatherContext","inputRef","optionRef","cityOptions","setCityOptions","isFound","setFound","isActiveInput","setActiveInput","cityLocation","setCityLocation","inputValue","setInputValue","counter","setCounter","isActiveDelete","length","searchParams","setSearchParams","nameCity","latCity","lonCity","lat","lon","city","window","addEventListener","onClickOutsideInput","removeEventListener","e","current","contains","target","latitude","get","longitude","setLatCity","setLonCity","setNameCity","setLoading","then","data","setWeatherData","catch","setError","finally","setWeatherHourly","success","position","coords","error","navigator","geolocation","getCurrentPosition","debounce","setTimeout","clearTimeout","handleInput","value","handleSearchClick","item","lng","name","scrollTo","top","behavior","pathname","onKey","key","blur","preventDefault","prev","Number","isInteger","scrollBy","onMouseEnter","index","onClickDelete","focus","onClickIsFound","stopPropagation","className","children","isLoading","fileName","_jsxFileName","lineNumber","columnNumber","isError","ref","placeholder","type","onInput","onFocus","onChange","onKeyDown","onClick","src","alt","map","adminName1","countryName","_c","$RefreshReg$"],"sources":["C:/Users/Gold/Desktop/weather/src/Header/Input/InputSearch.js"],"sourcesContent":["import React from 'react'\r\nimport { useState, useContext, useEffect, useRef } from 'react'\r\nimport { useLocation, useNavigate, useSearchParams } from 'react-router-dom'\r\n// import {uniqueBy} from '../../helper/filter-repeat'\r\nimport WeatherContext from '../../helper/weatherContext'\r\nimport closeIcons from '../../images/close_icon.png'\r\nimport './InputSearch.css'\r\nimport Loading from '../../components/Loading'\r\nimport ErrorFetch from '../../components/ErrorFetch'\r\nimport { getCurrentWeather, getCurrentWeatherHourly, getCurrentNameCity, getCurrentOptionsCities, fetchData, getCurrentWeatherUrl } from '../../helper/apiWeather' \r\n\r\n\r\n\r\nexport default function InputSearch() {\r\n\r\nconst navigate = useNavigate()\r\nconst location = useLocation()\r\nconst weatherContext = useContext(WeatherContext)\r\nconst inputRef = useRef()\r\nconst optionRef = useRef()\r\nconst [cityOptions, setCityOptions] = useState([])\r\nconst [isFound, setFound] = useState(false)\r\nconst [isActiveInput, setActiveInput] = useState(false)\r\nconst [cityLocation, setCityLocation] = useState(null)\r\nconst [inputValue, setInputValue] = useState('')\r\nconst [counter, setCounter] = useState(-1)\r\nconst isActiveDelete = inputValue.length > 0\r\nconst [searchParams, setSearchParams] = useSearchParams()\r\n\r\nuseEffect(() => {\r\n    if(weatherContext.nameCity && weatherContext.latCity && weatherContext.lonCity){\r\n        setSearchParams({ lat: weatherContext.latCity, lon: weatherContext.lonCity ,city: weatherContext.nameCity})\r\n    }\r\n}, [weatherContext.nameCity, weatherContext.latCity, weatherContext.lonCity])\r\n\r\nuseEffect(() => {\r\n    window.addEventListener('click', onClickOutsideInput)\r\n    return () => window.removeEventListener('click', onClickOutsideInput)\r\n},[])\r\n\r\nconst onClickOutsideInput = (e) => {\r\n    if(!inputRef.current.contains(e.target)){\r\n        setActiveInput(false)\r\n    }\r\n}\r\n\r\nuseEffect(() => {\r\n\r\n    const latitude = searchParams.get('lat')\r\n    const longitude = searchParams.get('lon')\r\n    const city = searchParams.get('city')\r\n\r\n    weatherContext.setLatCity(latitude)\r\n    weatherContext.setLonCity(longitude)\r\n    weatherContext.setNameCity(city)\r\n    if(latitude && longitude){\r\n        // fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}&accept-language=en`)\r\n        // .then(data => data.json())\r\n        // .then(data => {\r\n        //     console.log(data)\r\n        //     weatherContext.setNameCity(data.address.city)\r\n        //     weatherContext.setLoading(false)\r\n        // })\r\n        // .catch(() => {\r\n        //     weatherContext.setLoading(false)\r\n        //     weatherContext.setError(true)\r\n        // })\r\n\r\n        weatherContext.setLoading(true)\r\n\r\n        getCurrentWeather(latitude, longitude)\r\n            .then(({data}) => weatherContext.setWeatherData(data))\r\n            .catch(() => weatherContext.setError(true))\r\n            .finally(() => weatherContext.setLoading(false))\r\n\r\n        // weatherContext.setLoading(true)\r\n        // fetch(`https://api.weatherbit.io/v2.0/current?lat=${latitude}&lon=${longitude}&key=c2d3c64087e54d018cae06444bf6a848`)\r\n        // .then(data => data.json())\r\n        // .then(data => {\r\n        //     weatherContext.setWeatherData(data.data)\r\n        //     weatherContext.setLoading(false)\r\n        // })\r\n        // .catch(() => {\r\n        //     weatherContext.setLoading(false)\r\n        //     weatherContext.setError(true)\r\n        // })\r\n\r\n        getCurrentWeatherHourly(latitude, longitude, weatherContext.setWeatherHourly, weatherContext.setLoading, weatherContext.setError)\r\n\r\n        // fetch(`https://api.weatherbit.io/v2.0/forecast/hourly?lat=${latitude}&lon=${longitude}&key=c2d3c64087e54d018cae06444bf6a848`)\r\n        // .then(data => data.json())\r\n        // .then(data => weatherContext.setWeatherHourly(data.data))\r\n        // .catch(() => {\r\n        //     weatherContext.setLoading(false)\r\n        //     weatherContext.setError(true)\r\n        // })\r\n    } else {\r\n        const success = (position) => {\r\n\r\n            const lat = position.coords.latitude\r\n            const lon = position.coords.longitude\r\n    \r\n            weatherContext.setLatCity(lat)\r\n            weatherContext.setLonCity(lon)\r\n\r\n            weatherContext.setLoading(true)\r\n\r\n            getCurrentNameCity(lat, lon, weatherContext.setNameCity, weatherContext.setLoading, weatherContext.setError)\r\n            \r\n\r\n            // fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lon}&accept-language=en`)\r\n            // .then(data => data.json())\r\n            // .then(data => {\r\n            //     weatherContext.setNameCity(data.address.city)\r\n            //     weatherContext.setLoading(false)\r\n            // })\r\n            // .catch(() => {\r\n            //     weatherContext.setLoading(false)\r\n            //     weatherContext.setError(true)\r\n            // })\r\n            \r\n            // getCurrentWeather(lat, lon, weatherContext.setWeatherData, weatherContext.setLoading, weatherContext.setError)\r\n\r\n            fetchData(getCurrentWeatherUrl(lat, lon))\r\n            .then(({data}) => weatherContext.setWeatherData(data))\r\n            .catch(() => weatherContext.setError(true))\r\n            .finally(() => weatherContext.setLoading(false))\r\n\r\n            // fetch(`https://api.weatherbit.io/v2.0/current?lat=${lat}&lon=${lon}&key=c2d3c64087e54d018cae06444bf6a848`)\r\n            // .then(data => data.json())\r\n            // .then(data => weatherContext.setWeatherData(data.data))\r\n            // .catch(() => {\r\n            //     weatherContext.setLoading(false)\r\n            //     weatherContext.setError(true)\r\n            // })\r\n\r\n            getCurrentWeatherHourly(lat, lon, weatherContext.setWeatherHourly, weatherContext.setLoading, weatherContext.setError)\r\n    \r\n            // fetch(`https://api.weatherbit.io/v2.0/forecast/hourly?lat=${lat}&lon=${lon}&key=c2d3c64087e54d018cae06444bf6a848`)\r\n            // .then(data => data.json())\r\n            // .then(data => weatherContext.setWeatherHourly(data.data))\r\n            // .catch(() => {\r\n            //     weatherContext.setLoading(false)\r\n            //     weatherContext.setError(true)\r\n            // })\r\n\r\n        }\r\n    \r\n        const error = () => {\r\n            weatherContext.setLoading(false)\r\n            weatherContext.setError(true)\r\n        }\r\n    \r\n        if(navigator.geolocation){\r\n            navigator.geolocation.getCurrentPosition(success, error)\r\n        }\r\n    }\r\n    \r\n    \r\n},[])\r\n\r\nuseEffect(() => {\r\n    const debounce = setTimeout(() => {\r\n        if(inputValue.length > 0){\r\n            getCurrentOptionsCities(inputValue, setFound, setCityOptions, setCounter)\r\n            // fetch(`http://api.geonames.org/searchJSON?name=${inputValue}&maxRows=100&username=mkskhjwssofwfjjcjw00&&&`)  // lang=ru\r\n            // .then(data => data.json())\r\n            // .then(data => {\r\n            //     const filteredCities = data.geonames\r\n            //         .filter(filt => {\r\n            //             return filt.fclName === \"city, village,...\" \r\n            //             && filt.fcodeName !== \"section of populated place\" \r\n            //             && filt.lat && filt.lng \r\n            //             && filt.name.toLowerCase().startsWith(inputValue.toLowerCase())\r\n            //         })\r\n            //         .sort((a,b)=> b.population - a.population)\r\n            //     const uniqueFilteredCities = uniqueBy(filteredCities, (o1, o2) => o1.name === o2.name && o1.adminName1 === o2.adminName1 && o1.countryName === o2.countryName)\r\n            //     uniqueFilteredCities.length === 0 ? setFound(true) : setFound(false)\r\n            //     if(uniqueFilteredCities.length <= 6){\r\n            //         setCityOptions(uniqueFilteredCities)\r\n            //     }\r\n            //     if(uniqueFilteredCities.length > 6 && uniqueFilteredCities.length < 12){\r\n            //         setCityOptions(uniqueFilteredCities.slice(0, 6))\r\n            //     }\r\n            //     if(uniqueFilteredCities.length > 12 && uniqueFilteredCities.length < 18){\r\n            //         setCityOptions(uniqueFilteredCities.slice(0, 12))\r\n            //     }\r\n            //     if(uniqueFilteredCities.length > 18 && uniqueFilteredCities.length < 24){\r\n            //         setCityOptions(uniqueFilteredCities.slice(0, 18))\r\n            //     }\r\n            //     if(uniqueFilteredCities.length > 24 && uniqueFilteredCities.length < 30){\r\n            //         setCityOptions(uniqueFilteredCities.slice(0, 24))\r\n            //     }\r\n            //     if(uniqueFilteredCities.length > 30){\r\n            //         setCityOptions(uniqueFilteredCities.slice(0, 30))\r\n            //     }\r\n            //     setCounter(-1)\r\n            // })\r\n            // .catch(() => alert('error when searching for lists of cities'))\r\n        }\r\n        else{\r\n            setCityOptions([])\r\n            setFound(false)\r\n        }\r\n    },1000)\r\n\r\n    return () => clearTimeout(debounce)\r\n\r\n},[inputValue])\r\n\r\nconst handleInput = (e) => {\r\n    setInputValue(e.target.value)\r\n}\r\n\r\nconst handleSearchClick = (item) => {\r\n\r\n    weatherContext.setLatCity(item.lat)\r\n    weatherContext.setLonCity(item.lng)\r\n    weatherContext.setNameCity(item.name)\r\n    setInputValue('')\r\n    setCityOptions([])\r\n    window.scrollTo({ top: 0, behavior: 'smooth' })\r\n    if(location.pathname !== ''){\r\n        navigate('/')\r\n    }\r\n    weatherContext.setError(false)\r\n    weatherContext.setLoading(true)\r\n\r\n    getCurrentWeather(item.lat, item.lng, weatherContext.setWeatherData, weatherContext.setLoading, weatherContext.setError)\r\n\r\n    // fetch(`https://api.weatherbit.io/v2.0/current?lat=${item.lat}&lon=${item.lng}&key=c2d3c64087e54d018cae06444bf6a848`)\r\n    // .then(response  => response.json())\r\n    // .then(response  => {\r\n    //     weatherContext.setWeatherData(response.data)\r\n    // })\r\n    // .catch(() => {\r\n    //     weatherContext.setLoading(false)\r\n    //     weatherContext.setError(true)\r\n    // })\r\n    // .finally(() => weatherContext.setLoading(false))\r\n\r\n    getCurrentWeatherHourly(item.lat, item.lng, weatherContext.setWeatherHourly, weatherContext.setLoading, weatherContext.setError)\r\n\r\n    // fetch(`https://api.weatherbit.io/v2.0/forecast/hourly?lat=${item.lat}&lon=${item.lng}&key=c2d3c64087e54d018cae06444bf6a848`)\r\n    //     .then(data => data.json())\r\n    //     .then(data => weatherContext.setWeatherHourly(data.data))\r\n    //     .catch(() => {\r\n    //         weatherContext.setLoading(false)\r\n    //         weatherContext.setError(true)\r\n    //     })\r\n}\r\n\r\nconst onKey = (e) => {\r\n    if(e.key === 'Enter'){\r\n        handleSearchClick(cityLocation)\r\n        inputRef.current.blur()\r\n    }\r\n    if(e.key === 'ArrowDown' && counter < cityOptions.length - 1){\r\n        e.preventDefault()\r\n        setCounter((prev) => prev + 1)\r\n        setCityLocation(cityOptions[counter + 1])\r\n    }\r\n    if(e.key === 'ArrowUp' && counter >= 0){\r\n        e.preventDefault()\r\n        setCounter((prev) => prev - 1)\r\n        setCityLocation(cityOptions[counter - 1])\r\n    }\r\n\r\n    if(e.key === 'ArrowDown' && counter > 0 && Number.isInteger((counter + 1) / 6)){\r\n        e.preventDefault()\r\n        optionRef.current.scrollBy({ top: 300, behavior: 'smooth' })\r\n    }\r\n\r\n    if(e.key === 'ArrowUp' && counter % 6 === 0){\r\n        e.preventDefault()\r\n        optionRef.current.scrollBy({ top: -300, behavior: 'smooth' })\r\n    }\r\n}\r\n\r\nconst onMouseEnter = (item, index) => {\r\n    setCityLocation(item)\r\n    setCounter(index)\r\n}\r\n\r\nconst onClickDelete = () => {\r\n    setFound(false)\r\n    setCityOptions([])\r\n    setInputValue('')\r\n    inputRef.current.focus()\r\n}\r\n\r\nconst onClickIsFound = (e) => {\r\n    e.stopPropagation()\r\n    inputRef.current.focus()\r\n}\r\n\r\nreturn (\r\n<div className='search-wrapper'>\r\n    {weatherContext.isLoading && <Loading />}\r\n    {weatherContext.isError && <ErrorFetch />}\r\n    <div className='input-search'>\r\n        <input\r\n            ref={inputRef}\r\n            value={inputValue}\r\n            className='input-search'\r\n            placeholder='🔍︎ Search location'\r\n            type=\"text\" \r\n            onInput={handleInput}\r\n            onFocus={() => setActiveInput(true)}\r\n            onChange={() => setActiveInput(true)}\r\n            onKeyDown={onKey}\r\n        />\r\n        {isActiveDelete && <img onClick={onClickDelete} src={closeIcons} alt=\"delete_text\" />}\r\n    </div>\r\n    <ul className={isActiveInput ? 'lists-wrapper active' : 'lists-wrapper'} ref={optionRef}>   \r\n        {isFound && <li className='not-found' onClick={onClickIsFound}>city not found</li>}\r\n        {cityOptions.map((item, index) => \r\n        <li \r\n            key={index} \r\n            onClick={() => handleSearchClick(item)} \r\n            onMouseEnter={() => onMouseEnter(item, index)}\r\n            className={index === counter ? 'focused' : ''}\r\n        >\r\n            <h3>{item.name}</h3>\r\n            <div className='city-details'>\r\n                {item.adminName1 && <p>{item.adminName1},</p>}\r\n                {item.countryName && <p>{item.countryName}</p>}\r\n            </div>\r\n        </li>)}\r\n    </ul>\r\n</div>\r\n)\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC/D,SAASC,WAAW,EAAEC,WAAW,EAAEC,eAAe,QAAQ,kBAAkB;AAC5E;AACA,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAO,mBAAmB;AAC1B,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,UAAU,MAAM,6BAA6B;AACpD,SAASC,iBAAiB,EAAEC,uBAAuB,EAAEC,kBAAkB,EAAEC,uBAAuB,EAAEC,SAAS,EAAEC,oBAAoB,QAAQ,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIlK,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAEtC,MAAMC,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAC9B,MAAMiB,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAC9B,MAAMmB,cAAc,GAAGtB,UAAU,CAACM,cAAc,CAAC;EACjD,MAAMiB,QAAQ,GAAGrB,MAAM,CAAC,CAAC;EACzB,MAAMsB,SAAS,GAAGtB,MAAM,CAAC,CAAC;EAC1B,MAAM,CAACuB,WAAW,EAAEC,cAAc,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC4B,OAAO,EAAEC,QAAQ,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAAC8B,aAAa,EAAEC,cAAc,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACgC,YAAY,EAAEC,eAAe,CAAC,GAAGjC,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACkC,UAAU,EAAEC,aAAa,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACoC,OAAO,EAAEC,UAAU,CAAC,GAAGrC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAMsC,cAAc,GAAGJ,UAAU,CAACK,MAAM,GAAG,CAAC;EAC5C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGnC,eAAe,CAAC,CAAC;EAEzDJ,SAAS,CAAC,MAAM;IACZ,IAAGqB,cAAc,CAACmB,QAAQ,IAAInB,cAAc,CAACoB,OAAO,IAAIpB,cAAc,CAACqB,OAAO,EAAC;MAC3EH,eAAe,CAAC;QAAEI,GAAG,EAAEtB,cAAc,CAACoB,OAAO;QAAEG,GAAG,EAAEvB,cAAc,CAACqB,OAAO;QAAEG,IAAI,EAAExB,cAAc,CAACmB;MAAQ,CAAC,CAAC;IAC/G;EACJ,CAAC,EAAE,CAACnB,cAAc,CAACmB,QAAQ,EAAEnB,cAAc,CAACoB,OAAO,EAAEpB,cAAc,CAACqB,OAAO,CAAC,CAAC;EAE7E1C,SAAS,CAAC,MAAM;IACZ8C,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAEC,mBAAmB,CAAC;IACrD,OAAO,MAAMF,MAAM,CAACG,mBAAmB,CAAC,OAAO,EAAED,mBAAmB,CAAC;EACzE,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMA,mBAAmB,GAAIE,CAAC,IAAK;IAC/B,IAAG,CAAC5B,QAAQ,CAAC6B,OAAO,CAACC,QAAQ,CAACF,CAAC,CAACG,MAAM,CAAC,EAAC;MACpCxB,cAAc,CAAC,KAAK,CAAC;IACzB;EACJ,CAAC;EAED7B,SAAS,CAAC,MAAM;IAEZ,MAAMsD,QAAQ,GAAGhB,YAAY,CAACiB,GAAG,CAAC,KAAK,CAAC;IACxC,MAAMC,SAAS,GAAGlB,YAAY,CAACiB,GAAG,CAAC,KAAK,CAAC;IACzC,MAAMV,IAAI,GAAGP,YAAY,CAACiB,GAAG,CAAC,MAAM,CAAC;IAErClC,cAAc,CAACoC,UAAU,CAACH,QAAQ,CAAC;IACnCjC,cAAc,CAACqC,UAAU,CAACF,SAAS,CAAC;IACpCnC,cAAc,CAACsC,WAAW,CAACd,IAAI,CAAC;IAChC,IAAGS,QAAQ,IAAIE,SAAS,EAAC;MACrB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEAnC,cAAc,CAACuC,UAAU,CAAC,IAAI,CAAC;MAE/BnD,iBAAiB,CAAC6C,QAAQ,EAAEE,SAAS,CAAC,CACjCK,IAAI,CAAC,CAAC;QAACC;MAAI,CAAC,KAAKzC,cAAc,CAAC0C,cAAc,CAACD,IAAI,CAAC,CAAC,CACrDE,KAAK,CAAC,MAAM3C,cAAc,CAAC4C,QAAQ,CAAC,IAAI,CAAC,CAAC,CAC1CC,OAAO,CAAC,MAAM7C,cAAc,CAACuC,UAAU,CAAC,KAAK,CAAC,CAAC;;MAEpD;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEAlD,uBAAuB,CAAC4C,QAAQ,EAAEE,SAAS,EAAEnC,cAAc,CAAC8C,gBAAgB,EAAE9C,cAAc,CAACuC,UAAU,EAAEvC,cAAc,CAAC4C,QAAQ,CAAC;;MAEjI;MACA;MACA;MACA;MACA;MACA;MACA;IACJ,CAAC,MAAM;MACH,MAAMG,OAAO,GAAIC,QAAQ,IAAK;QAE1B,MAAM1B,GAAG,GAAG0B,QAAQ,CAACC,MAAM,CAAChB,QAAQ;QACpC,MAAMV,GAAG,GAAGyB,QAAQ,CAACC,MAAM,CAACd,SAAS;QAErCnC,cAAc,CAACoC,UAAU,CAACd,GAAG,CAAC;QAC9BtB,cAAc,CAACqC,UAAU,CAACd,GAAG,CAAC;QAE9BvB,cAAc,CAACuC,UAAU,CAAC,IAAI,CAAC;QAE/BjD,kBAAkB,CAACgC,GAAG,EAAEC,GAAG,EAAEvB,cAAc,CAACsC,WAAW,EAAEtC,cAAc,CAACuC,UAAU,EAAEvC,cAAc,CAAC4C,QAAQ,CAAC;;QAG5G;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;;QAEApD,SAAS,CAACC,oBAAoB,CAAC6B,GAAG,EAAEC,GAAG,CAAC,CAAC,CACxCiB,IAAI,CAAC,CAAC;UAACC;QAAI,CAAC,KAAKzC,cAAc,CAAC0C,cAAc,CAACD,IAAI,CAAC,CAAC,CACrDE,KAAK,CAAC,MAAM3C,cAAc,CAAC4C,QAAQ,CAAC,IAAI,CAAC,CAAC,CAC1CC,OAAO,CAAC,MAAM7C,cAAc,CAACuC,UAAU,CAAC,KAAK,CAAC,CAAC;;QAEhD;QACA;QACA;QACA;QACA;QACA;QACA;;QAEAlD,uBAAuB,CAACiC,GAAG,EAAEC,GAAG,EAAEvB,cAAc,CAAC8C,gBAAgB,EAAE9C,cAAc,CAACuC,UAAU,EAAEvC,cAAc,CAAC4C,QAAQ,CAAC;;QAEtH;QACA;QACA;QACA;QACA;QACA;QACA;MAEJ,CAAC;MAED,MAAMM,KAAK,GAAGA,CAAA,KAAM;QAChBlD,cAAc,CAACuC,UAAU,CAAC,KAAK,CAAC;QAChCvC,cAAc,CAAC4C,QAAQ,CAAC,IAAI,CAAC;MACjC,CAAC;MAED,IAAGO,SAAS,CAACC,WAAW,EAAC;QACrBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAACN,OAAO,EAAEG,KAAK,CAAC;MAC5D;IACJ;EAGJ,CAAC,EAAC,EAAE,CAAC;EAELvE,SAAS,CAAC,MAAM;IACZ,MAAM2E,QAAQ,GAAGC,UAAU,CAAC,MAAM;MAC9B,IAAG5C,UAAU,CAACK,MAAM,GAAG,CAAC,EAAC;QACrBzB,uBAAuB,CAACoB,UAAU,EAAEL,QAAQ,EAAEF,cAAc,EAAEU,UAAU,CAAC;QACzE;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACJ,CAAC,MACG;QACAV,cAAc,CAAC,EAAE,CAAC;QAClBE,QAAQ,CAAC,KAAK,CAAC;MACnB;IACJ,CAAC,EAAC,IAAI,CAAC;IAEP,OAAO,MAAMkD,YAAY,CAACF,QAAQ,CAAC;EAEvC,CAAC,EAAC,CAAC3C,UAAU,CAAC,CAAC;EAEf,MAAM8C,WAAW,GAAI5B,CAAC,IAAK;IACvBjB,aAAa,CAACiB,CAAC,CAACG,MAAM,CAAC0B,KAAK,CAAC;EACjC,CAAC;EAED,MAAMC,iBAAiB,GAAIC,IAAI,IAAK;IAEhC5D,cAAc,CAACoC,UAAU,CAACwB,IAAI,CAACtC,GAAG,CAAC;IACnCtB,cAAc,CAACqC,UAAU,CAACuB,IAAI,CAACC,GAAG,CAAC;IACnC7D,cAAc,CAACsC,WAAW,CAACsB,IAAI,CAACE,IAAI,CAAC;IACrClD,aAAa,CAAC,EAAE,CAAC;IACjBR,cAAc,CAAC,EAAE,CAAC;IAClBqB,MAAM,CAACsC,QAAQ,CAAC;MAAEC,GAAG,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;IAC/C,IAAGlE,QAAQ,CAACmE,QAAQ,KAAK,EAAE,EAAC;MACxBpE,QAAQ,CAAC,GAAG,CAAC;IACjB;IACAE,cAAc,CAAC4C,QAAQ,CAAC,KAAK,CAAC;IAC9B5C,cAAc,CAACuC,UAAU,CAAC,IAAI,CAAC;IAE/BnD,iBAAiB,CAACwE,IAAI,CAACtC,GAAG,EAAEsC,IAAI,CAACC,GAAG,EAAE7D,cAAc,CAAC0C,cAAc,EAAE1C,cAAc,CAACuC,UAAU,EAAEvC,cAAc,CAAC4C,QAAQ,CAAC;;IAExH;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEAvD,uBAAuB,CAACuE,IAAI,CAACtC,GAAG,EAAEsC,IAAI,CAACC,GAAG,EAAE7D,cAAc,CAAC8C,gBAAgB,EAAE9C,cAAc,CAACuC,UAAU,EAAEvC,cAAc,CAAC4C,QAAQ,CAAC;;IAEhI;IACA;IACA;IACA;IACA;IACA;IACA;EACJ,CAAC;EAED,MAAMuB,KAAK,GAAItC,CAAC,IAAK;IACjB,IAAGA,CAAC,CAACuC,GAAG,KAAK,OAAO,EAAC;MACjBT,iBAAiB,CAAClD,YAAY,CAAC;MAC/BR,QAAQ,CAAC6B,OAAO,CAACuC,IAAI,CAAC,CAAC;IAC3B;IACA,IAAGxC,CAAC,CAACuC,GAAG,KAAK,WAAW,IAAIvD,OAAO,GAAGV,WAAW,CAACa,MAAM,GAAG,CAAC,EAAC;MACzDa,CAAC,CAACyC,cAAc,CAAC,CAAC;MAClBxD,UAAU,CAAEyD,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;MAC9B7D,eAAe,CAACP,WAAW,CAACU,OAAO,GAAG,CAAC,CAAC,CAAC;IAC7C;IACA,IAAGgB,CAAC,CAACuC,GAAG,KAAK,SAAS,IAAIvD,OAAO,IAAI,CAAC,EAAC;MACnCgB,CAAC,CAACyC,cAAc,CAAC,CAAC;MAClBxD,UAAU,CAAEyD,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;MAC9B7D,eAAe,CAACP,WAAW,CAACU,OAAO,GAAG,CAAC,CAAC,CAAC;IAC7C;IAEA,IAAGgB,CAAC,CAACuC,GAAG,KAAK,WAAW,IAAIvD,OAAO,GAAG,CAAC,IAAI2D,MAAM,CAACC,SAAS,CAAC,CAAC5D,OAAO,GAAG,CAAC,IAAI,CAAC,CAAC,EAAC;MAC3EgB,CAAC,CAACyC,cAAc,CAAC,CAAC;MAClBpE,SAAS,CAAC4B,OAAO,CAAC4C,QAAQ,CAAC;QAAEV,GAAG,EAAE,GAAG;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;IAChE;IAEA,IAAGpC,CAAC,CAACuC,GAAG,KAAK,SAAS,IAAIvD,OAAO,GAAG,CAAC,KAAK,CAAC,EAAC;MACxCgB,CAAC,CAACyC,cAAc,CAAC,CAAC;MAClBpE,SAAS,CAAC4B,OAAO,CAAC4C,QAAQ,CAAC;QAAEV,GAAG,EAAE,CAAC,GAAG;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;IACjE;EACJ,CAAC;EAED,MAAMU,YAAY,GAAGA,CAACf,IAAI,EAAEgB,KAAK,KAAK;IAClClE,eAAe,CAACkD,IAAI,CAAC;IACrB9C,UAAU,CAAC8D,KAAK,CAAC;EACrB,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IACxBvE,QAAQ,CAAC,KAAK,CAAC;IACfF,cAAc,CAAC,EAAE,CAAC;IAClBQ,aAAa,CAAC,EAAE,CAAC;IACjBX,QAAQ,CAAC6B,OAAO,CAACgD,KAAK,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,cAAc,GAAIlD,CAAC,IAAK;IAC1BA,CAAC,CAACmD,eAAe,CAAC,CAAC;IACnB/E,QAAQ,CAAC6B,OAAO,CAACgD,KAAK,CAAC,CAAC;EAC5B,CAAC;EAED,oBACAnF,OAAA;IAAKsF,SAAS,EAAC,gBAAgB;IAAAC,QAAA,GAC1BlF,cAAc,CAACmF,SAAS,iBAAIxF,OAAA,CAACT,OAAO;MAAAkG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACvCvF,cAAc,CAACwF,OAAO,iBAAI7F,OAAA,CAACR,UAAU;MAAAiG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzC5F,OAAA;MAAKsF,SAAS,EAAC,cAAc;MAAAC,QAAA,gBACzBvF,OAAA;QACI8F,GAAG,EAAExF,QAAS;QACdyD,KAAK,EAAE/C,UAAW;QAClBsE,SAAS,EAAC,cAAc;QACxBS,WAAW,EAAC,oCAAqB;QACjCC,IAAI,EAAC,MAAM;QACXC,OAAO,EAAEnC,WAAY;QACrBoC,OAAO,EAAEA,CAAA,KAAMrF,cAAc,CAAC,IAAI,CAAE;QACpCsF,QAAQ,EAAEA,CAAA,KAAMtF,cAAc,CAAC,IAAI,CAAE;QACrCuF,SAAS,EAAE5B;MAAM;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,EACDxE,cAAc,iBAAIpB,OAAA;QAAKqG,OAAO,EAAEnB,aAAc;QAACoB,GAAG,EAAEhH,UAAW;QAACiH,GAAG,EAAC;MAAa;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpF,CAAC,eACN5F,OAAA;MAAIsF,SAAS,EAAE1E,aAAa,GAAG,sBAAsB,GAAG,eAAgB;MAACkF,GAAG,EAAEvF,SAAU;MAAAgF,QAAA,GACnF7E,OAAO,iBAAIV,OAAA;QAAIsF,SAAS,EAAC,WAAW;QAACe,OAAO,EAAEjB,cAAe;QAAAG,QAAA,EAAC;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACjFpF,WAAW,CAACgG,GAAG,CAAC,CAACvC,IAAI,EAAEgB,KAAK,kBAC7BjF,OAAA;QAEIqG,OAAO,EAAEA,CAAA,KAAMrC,iBAAiB,CAACC,IAAI,CAAE;QACvCe,YAAY,EAAEA,CAAA,KAAMA,YAAY,CAACf,IAAI,EAAEgB,KAAK,CAAE;QAC9CK,SAAS,EAAEL,KAAK,KAAK/D,OAAO,GAAG,SAAS,GAAG,EAAG;QAAAqE,QAAA,gBAE9CvF,OAAA;UAAAuF,QAAA,EAAKtB,IAAI,CAACE;QAAI;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpB5F,OAAA;UAAKsF,SAAS,EAAC,cAAc;UAAAC,QAAA,GACxBtB,IAAI,CAACwC,UAAU,iBAAIzG,OAAA;YAAAuF,QAAA,GAAItB,IAAI,CAACwC,UAAU,EAAC,GAAC;UAAA;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,EAC5C3B,IAAI,CAACyC,WAAW,iBAAI1G,OAAA;YAAAuF,QAAA,EAAItB,IAAI,CAACyC;UAAW;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC;MAAA,GATDX,KAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUV,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEN;AAAC1F,EAAA,CA/TuBD,WAAW;EAAA,QAElBd,WAAW,EACXD,WAAW,EAWYE,eAAe;AAAA;AAAAuH,EAAA,GAd/B1G,WAAW;AAAA,IAAA0G,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}