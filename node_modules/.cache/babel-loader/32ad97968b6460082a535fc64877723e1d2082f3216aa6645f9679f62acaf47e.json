{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gold\\\\Desktop\\\\test\\\\src\\\\components\\\\Input\\\\InputSearch.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useRef } from 'react';\nimport './InputSearch.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InputSearch(props) {\n  _s();\n  const cityRef = useRef();\n  const [cityOptions, setCityOptions] = useState([]);\n  function handleInputChange() {\n    // fetch(`http://api.geonames.org/searchJSON?name=${cityRef.current.value}&maxRows=100&username=mkskhjwssofwfjjcjw00&&&`)  // lang=ru\n    fetch(`https://api.opencagedata.com/geocode/v1/json?q=${cityRef.current.value}&key=23114c3eadd94316a76788a4c8df6e86&type=city`).then(data => data.json()).then(data => {\n      if (data.results && data.results.length > 0) {\n        console.log(data.results);\n        const arrayCities = data.results.filter(type => type.components._type === 'city').filter(city => city.components.city.toLowerCase().includes(cityRef.current.value.toLowerCase()));\n        setCityOptions(arrayCities);\n      }\n    });\n  }\n  function handleSearchClick(item) {\n    fetch(`https://api.weatherbit.io/v2.0/current?lat=${item.lat}&lon=${item.lng}&key=097dd5fffd324ebb875e47ef3fed2fa1`).then(response => response.json()).then(response => props.weatherData(response.data)).catch(error => alert(error));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-search\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: cityRef,\n      type: \"text\",\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"lists-wrapper\",\n      children: cityOptions.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleSearchClick(item),\n        style: {\n          border: '1px solid black'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"city-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [item.adminName1, \",\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.countryName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 34\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 1\n  }, this);\n}\n_s(InputSearch, \"+q8e8e9VBl5xD0dDiuBtbN6okoM=\");\n_c = InputSearch;\nvar _c;\n$RefreshReg$(_c, \"InputSearch\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","InputSearch","props","_s","cityRef","cityOptions","setCityOptions","handleInputChange","fetch","current","value","then","data","json","results","length","console","log","arrayCities","filter","type","components","_type","city","toLowerCase","includes","handleSearchClick","item","lat","lng","response","weatherData","catch","error","alert","className","children","ref","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","style","border","name","adminName1","countryName","_c","$RefreshReg$"],"sources":["C:/Users/Gold/Desktop/test/src/components/Input/InputSearch.js"],"sourcesContent":["import React from 'react'\r\nimport { useState, useRef } from 'react'\r\nimport './InputSearch.css'\r\n\r\nexport default function InputSearch(props) {\r\n\r\nconst cityRef = useRef()\r\nconst [cityOptions, setCityOptions] = useState([])\r\n\r\nfunction handleInputChange(){\r\n    // fetch(`http://api.geonames.org/searchJSON?name=${cityRef.current.value}&maxRows=100&username=mkskhjwssofwfjjcjw00&&&`)  // lang=ru\r\n    fetch(`https://api.opencagedata.com/geocode/v1/json?q=${cityRef.current.value}&key=23114c3eadd94316a76788a4c8df6e86&type=city`)\r\n    .then(data => data.json())\r\n    .then(data => {\r\n        if(data.results && data.results.length > 0){\r\n        console.log(data.results)\r\n        const arrayCities = data.results\r\n        .filter(type => type.components._type === 'city')\r\n        .filter(city => city.components.city.toLowerCase().includes(cityRef.current.value.toLowerCase()))\r\n        setCityOptions(arrayCities)\r\n}})\r\n}\r\n\r\nfunction handleSearchClick(item){\r\n    fetch(`https://api.weatherbit.io/v2.0/current?lat=${item.lat}&lon=${item.lng}&key=097dd5fffd324ebb875e47ef3fed2fa1`)\r\n    .then(response  => response.json())\r\n    .then(response  => props.weatherData(response.data))\r\n    .catch(error => alert(error))\r\n}\r\n\r\nreturn (\r\n<div className='input-search'>\r\n    <input \r\n        ref={cityRef} \r\n        type=\"text\" \r\n        onChange={handleInputChange} \r\n    />\r\n    <ul className='lists-wrapper'>\r\n        {cityOptions.map(item => <li onClick={()=>handleSearchClick(item)} style={{border: '1px solid black'}}>\r\n            <h3>{item.name}</h3>\r\n            <div className='city-details'>\r\n                <p>{item.adminName1},</p>\r\n                <p>{item.countryName}</p>\r\n            </div>\r\n        </li>)}\r\n    </ul>\r\n</div>\r\n)\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}