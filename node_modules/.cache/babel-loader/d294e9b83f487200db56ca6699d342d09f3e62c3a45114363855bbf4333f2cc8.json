{"ast":null,"code":"const getCurrentCity = (lat, lon, setNameCity, setLoading, setError) => {\n  fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lon}&accept-language=en`).then(data => data.json()).then(data => {\n    setNameCity(data.address.city);\n    setLoading(false);\n  }).catch(() => {\n    setLoading(false);\n    setError(true);\n  });\n};\nconst getCurrentWeather = (lat, lon, setWeatherData, setLoading, setError) => {\n  setLoading(true);\n  fetch(`https://api.weatherbit.io/v2.0/current?lat=${lat}&lon=${lon}&key=c2d3c64087e54d018cae06444bf6a848`).then(data => data.json()).then(data => {\n    setWeatherData(data.data);\n    setLoading(false);\n  }).catch(() => {\n    setLoading(false);\n    setError(true);\n  });\n};\nexport { getCurrentCity, getCurrentWeather };","map":{"version":3,"names":["getCurrentCity","lat","lon","setNameCity","setLoading","setError","fetch","then","data","json","address","city","catch","getCurrentWeather","setWeatherData"],"sources":["C:/Users/Gold/Desktop/test/src/helper/apiWeather.js"],"sourcesContent":["const getCurrentCity = (lat, lon, setNameCity, setLoading, setError) => {\r\n    fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lon}&accept-language=en`)\r\n        .then(data => data.json())\r\n        .then(data => {\r\n            setNameCity(data.address.city)\r\n            setLoading(false)\r\n        })\r\n        .catch(() => {\r\n            setLoading(false)\r\n            setError(true)\r\n        })\r\n}\r\n\r\nconst getCurrentWeather = (lat, lon, setWeatherData, setLoading, setError) => {\r\n        setLoading(true)\r\n        fetch(`https://api.weatherbit.io/v2.0/current?lat=${lat}&lon=${lon}&key=c2d3c64087e54d018cae06444bf6a848`)\r\n        .then(data => data.json())\r\n        .then(data => {\r\n            setWeatherData(data.data)\r\n            setLoading(false)\r\n        })\r\n        .catch(() => {\r\n            setLoading(false)\r\n            setError(true)\r\n        })\r\n}\r\n\r\nexport {getCurrentCity, getCurrentWeather}"],"mappings":"AAAA,MAAMA,cAAc,GAAGA,CAACC,GAAG,EAAEC,GAAG,EAAEC,WAAW,EAAEC,UAAU,EAAEC,QAAQ,KAAK;EACpEC,KAAK,CAAE,+DAA8DL,GAAI,QAAOC,GAAI,qBAAoB,CAAC,CACpGK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAACC,IAAI,IAAI;IACVL,WAAW,CAACK,IAAI,CAACE,OAAO,CAACC,IAAI,CAAC;IAC9BP,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC,CAAC,CACDQ,KAAK,CAAC,MAAM;IACTR,UAAU,CAAC,KAAK,CAAC;IACjBC,QAAQ,CAAC,IAAI,CAAC;EAClB,CAAC,CAAC;AACV,CAAC;AAED,MAAMQ,iBAAiB,GAAGA,CAACZ,GAAG,EAAEC,GAAG,EAAEY,cAAc,EAAEV,UAAU,EAAEC,QAAQ,KAAK;EACtED,UAAU,CAAC,IAAI,CAAC;EAChBE,KAAK,CAAE,8CAA6CL,GAAI,QAAOC,GAAI,uCAAsC,CAAC,CACzGK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAACC,IAAI,IAAI;IACVM,cAAc,CAACN,IAAI,CAACA,IAAI,CAAC;IACzBJ,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC,CAAC,CACDQ,KAAK,CAAC,MAAM;IACTR,UAAU,CAAC,KAAK,CAAC;IACjBC,QAAQ,CAAC,IAAI,CAAC;EAClB,CAAC,CAAC;AACV,CAAC;AAED,SAAQL,cAAc,EAAEa,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}