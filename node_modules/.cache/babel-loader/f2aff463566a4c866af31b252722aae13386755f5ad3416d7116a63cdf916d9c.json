{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gold\\\\Desktop\\\\weather\\\\src\\\\Header\\\\Input\\\\InputSearch.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useContext, useEffect, useRef } from 'react';\nimport { useLocation, useNavigate, useSearchParams } from 'react-router-dom';\nimport { uniqueBy } from '../../helper/filterRepeat';\nimport WeatherContext from '../../helper/weatherContext';\nimport closeIcons from '../../images/close_icon.png';\nimport './InputSearch.css';\nimport Loading from '../../components/Loading';\nimport ErrorFetch from '../../components/ErrorFetch';\nimport { getCurrentWeatherUrl, getCurrentWeatherHourlyUrl } from '../../helper/apiWeather';\nimport fetchData from '../../helper/fetchData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InputSearch() {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const weatherContext = useContext(WeatherContext);\n  const inputRef = useRef();\n  const optionRef = useRef();\n  const [cityOptions, setCityOptions] = useState([]);\n  const [isFound, setFound] = useState(false);\n  const [isActiveInput, setActiveInput] = useState(false);\n  const [cityLocation, setCityLocation] = useState(null);\n  const [inputValue, setInputValue] = useState('');\n  const [counter, setCounter] = useState(-1);\n  const isActiveDelete = inputValue.length > 0;\n  const [searchParams, setSearchParams] = useSearchParams();\n  useEffect(() => {\n    if (weatherContext.nameCity && weatherContext.latCity && weatherContext.lonCity) {\n      setSearchParams({\n        lat: weatherContext.latCity,\n        lon: weatherContext.lonCity,\n        city: weatherContext.nameCity\n      });\n    }\n  }, [weatherContext.nameCity, weatherContext.latCity, weatherContext.lonCity]);\n  useEffect(() => {\n    window.addEventListener('click', onClickOutsideInput);\n    return () => window.removeEventListener('click', onClickOutsideInput);\n  }, []);\n  const onClickOutsideInput = e => {\n    if (!inputRef.current.contains(e.target)) {\n      setActiveInput(false);\n    }\n  };\n  useEffect(() => {\n    const latitude = searchParams.get('lat');\n    const longitude = searchParams.get('lon');\n    const city = searchParams.get('city');\n    weatherContext.setLatCity(latitude);\n    weatherContext.setLonCity(longitude);\n    weatherContext.setNameCity(city);\n    if (latitude && longitude) {\n      weatherContext.setLoading(true);\n      fetchData(getCurrentWeatherUrl(latitude, longitude)).then(({\n        data\n      }) => weatherContext.setWeatherData(data)).catch(() => weatherContext.setError(true)).finally(() => weatherContext.setLoading(false));\n      fetchData(getCurrentWeatherHourlyUrl(latitude, longitude)).then(({\n        data\n      }) => weatherContext.setWeatherHourly(data)).catch(() => weatherContext.setError(true)).finally(() => weatherContext.setLoading(false));\n    } else {\n      const success = position => {\n        const lat = position.coords.latitude;\n        const lon = position.coords.longitude;\n        weatherContext.setLatCity(lat);\n        weatherContext.setLonCity(lon);\n        weatherContext.setLoading(true);\n        fetchData(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lon}&accept-language=en`).then(data => weatherContext.setNameCity(data.address.city)).catch(() => weatherContext.setError(true)).finally(() => weatherContext.setLoading(false));\n        fetchData(getCurrentWeatherUrl(lat, lon)).then(({\n          data\n        }) => weatherContext.setWeatherData(data)).catch(() => weatherContext.setError(true)).finally(() => weatherContext.setLoading(false));\n        fetchData(getCurrentWeatherHourlyUrl(lat, lon)).then(({\n          data\n        }) => weatherContext.setWeatherHourly(data)).catch(() => weatherContext.setError(true)).finally(() => weatherContext.setLoading(false));\n      };\n      const error = () => {\n        weatherContext.setLoading(false);\n        weatherContext.setError(true);\n      };\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(success, error);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    const debounce = setTimeout(() => {\n      if (inputValue.length > 1) {\n        // fetchData(`http://api.geonames.org/searchJSON?name=${inputValue}&maxRows=100&username=mkskhjwssofwfjjcjw00&&&`)\n        //     .then(data => console.log(data.geonames))\n        fetchData(`https://api.opencagedata.com/geocode/v1/json?q=${inputValue}&language=en&limit=100&key=23114c3eadd94316a76788a4c8df6e86`).then(data => {\n          const arrayResults = data.results;\n          const filteredCities = arrayResults.map(filt => ({\n            components: filt.components,\n            geometry: filt.geometry\n          })).filter(filt => {\n            return filt.components.city;\n          });\n          console.log(filteredCities);\n        });\n        // .then(data => {\n        //     const filteredCities = data.geonames\n        //         .filter(filt => {\n        //             return filt.fclName === \"city, village,...\" \n        //             && filt.fcodeName !== \"section of populated place\" \n        //             && filt.lat && filt.lng \n        //             && filt.name.toLowerCase().startsWith(inputValue.toLowerCase())\n        //         })\n        //         .sort((a,b)=> b.population - a.population)\n        //     const uniqueFilteredCities = uniqueBy(filteredCities, (o1, o2) => o1.name === o2.name && o1.adminName1 === o2.adminName1 && o1.countryName === o2.countryName)\n        //     uniqueFilteredCities.length === 0 ? setFound(true) : setFound(false)\n        //     if(uniqueFilteredCities.length <= 6){\n        //         setCityOptions(uniqueFilteredCities)\n        //     }\n        //     if(uniqueFilteredCities.length > 6 && uniqueFilteredCities.length < 12){\n        //         setCityOptions(uniqueFilteredCities.slice(0, 6))\n        //     }\n        //     if(uniqueFilteredCities.length > 12 && uniqueFilteredCities.length < 18){\n        //         setCityOptions(uniqueFilteredCities.slice(0, 12))\n        //     }\n        //     if(uniqueFilteredCities.length > 18 && uniqueFilteredCities.length < 24){\n        //         setCityOptions(uniqueFilteredCities.slice(0, 18))\n        //     }\n        //     if(uniqueFilteredCities.length > 24 && uniqueFilteredCities.length < 30){\n        //         setCityOptions(uniqueFilteredCities.slice(0, 24))\n        //     }\n        //     if(uniqueFilteredCities.length > 30){\n        //         setCityOptions(uniqueFilteredCities.slice(0, 30))\n        //     }\n        //     setCounter(-1)\n        // })\n        // .catch(() => weatherContext.setError(true))\n      } else {\n        setCityOptions([]);\n        setFound(false);\n      }\n    }, 1000);\n    return () => clearTimeout(debounce);\n  }, [inputValue]);\n  const handleInput = e => {\n    setInputValue(e.target.value);\n  };\n  const handleSearchClick = item => {\n    weatherContext.setLatCity(item.lat);\n    weatherContext.setLonCity(item.lng);\n    weatherContext.setNameCity(item.name);\n    setInputValue('');\n    setCityOptions([]);\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n    if (location.pathname !== '') {\n      navigate('/');\n    }\n    weatherContext.setLoading(true);\n    fetchData(getCurrentWeatherUrl(item.lat, item.lng)).then(({\n      data\n    }) => weatherContext.setWeatherData(data)).catch(() => weatherContext.setError(true)).finally(() => weatherContext.setLoading(false));\n    fetchData(getCurrentWeatherHourlyUrl(item.lat, item.lng)).then(({\n      data\n    }) => weatherContext.setWeatherHourly(data)).catch(() => weatherContext.setError(true)).finally(() => weatherContext.setLoading(false));\n  };\n  const onKey = e => {\n    if (e.key === 'Enter') {\n      handleSearchClick(cityLocation);\n      inputRef.current.blur();\n    }\n    if (e.key === 'ArrowDown' && counter < cityOptions.length - 1) {\n      e.preventDefault();\n      setCounter(prev => prev + 1);\n      setCityLocation(cityOptions[counter + 1]);\n    }\n    if (e.key === 'ArrowUp' && counter >= 0) {\n      e.preventDefault();\n      setCounter(prev => prev - 1);\n      setCityLocation(cityOptions[counter - 1]);\n    }\n    if (e.key === 'ArrowDown' && counter > 0 && Number.isInteger((counter + 1) / 6)) {\n      e.preventDefault();\n      optionRef.current.scrollBy({\n        top: 300,\n        behavior: 'smooth'\n      });\n    }\n    if (e.key === 'ArrowUp' && counter % 6 === 0) {\n      e.preventDefault();\n      optionRef.current.scrollBy({\n        top: -300,\n        behavior: 'smooth'\n      });\n    }\n  };\n  const onMouseEnter = (item, index) => {\n    setCityLocation(item);\n    setCounter(index);\n  };\n  const onClickDelete = () => {\n    setFound(false);\n    setCityOptions([]);\n    setInputValue('');\n    inputRef.current.focus();\n  };\n  const onClickIsFound = e => {\n    e.stopPropagation();\n    inputRef.current.focus();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-wrapper\",\n    children: [weatherContext.isLoading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 34\n    }, this), weatherContext.isError && /*#__PURE__*/_jsxDEV(ErrorFetch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        value: inputValue,\n        className: \"input-search\",\n        placeholder: \"\\uD83D\\uDD0D\\uFE0E Search location\",\n        type: \"text\",\n        onInput: handleInput,\n        onFocus: () => setActiveInput(true),\n        onChange: () => setActiveInput(true),\n        onKeyDown: onKey\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), isActiveDelete && /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: onClickDelete,\n        src: closeIcons,\n        alt: \"delete_text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: isActiveInput ? 'lists-wrapper active' : 'lists-wrapper',\n      ref: optionRef,\n      children: [isFound && /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"not-found\",\n        onClick: onClickIsFound,\n        children: \"city not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 21\n      }, this), cityOptions.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleSearchClick(item),\n        onMouseEnter: () => onMouseEnter(item, index),\n        className: index === counter ? 'focused' : '',\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"city-details\",\n          children: [item.adminName1 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [item.adminName1, \",\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 37\n          }, this), item.countryName && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.countryName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 1\n  }, this);\n}\n_s(InputSearch, \"KQqYjdb/GXh4AVdPnXPflMGAbuo=\", false, function () {\n  return [useNavigate, useLocation, useSearchParams];\n});\n_c = InputSearch;\nvar _c;\n$RefreshReg$(_c, \"InputSearch\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useRef","useLocation","useNavigate","useSearchParams","uniqueBy","WeatherContext","closeIcons","Loading","ErrorFetch","getCurrentWeatherUrl","getCurrentWeatherHourlyUrl","fetchData","jsxDEV","_jsxDEV","InputSearch","_s","navigate","location","weatherContext","inputRef","optionRef","cityOptions","setCityOptions","isFound","setFound","isActiveInput","setActiveInput","cityLocation","setCityLocation","inputValue","setInputValue","counter","setCounter","isActiveDelete","length","searchParams","setSearchParams","nameCity","latCity","lonCity","lat","lon","city","window","addEventListener","onClickOutsideInput","removeEventListener","e","current","contains","target","latitude","get","longitude","setLatCity","setLonCity","setNameCity","setLoading","then","data","setWeatherData","catch","setError","finally","setWeatherHourly","success","position","coords","address","error","navigator","geolocation","getCurrentPosition","debounce","setTimeout","arrayResults","results","filteredCities","map","filt","components","geometry","filter","console","log","clearTimeout","handleInput","value","handleSearchClick","item","lng","name","scrollTo","top","behavior","pathname","onKey","key","blur","preventDefault","prev","Number","isInteger","scrollBy","onMouseEnter","index","onClickDelete","focus","onClickIsFound","stopPropagation","className","children","isLoading","fileName","_jsxFileName","lineNumber","columnNumber","isError","ref","placeholder","type","onInput","onFocus","onChange","onKeyDown","onClick","src","alt","adminName1","countryName","_c","$RefreshReg$"],"sources":["C:/Users/Gold/Desktop/weather/src/Header/Input/InputSearch.js"],"sourcesContent":["import React from 'react'\r\nimport { useState, useContext, useEffect, useRef } from 'react'\r\nimport { useLocation, useNavigate, useSearchParams } from 'react-router-dom'\r\nimport {uniqueBy} from '../../helper/filterRepeat'\r\nimport WeatherContext from '../../helper/weatherContext'\r\nimport closeIcons from '../../images/close_icon.png'\r\nimport './InputSearch.css'\r\nimport Loading from '../../components/Loading'\r\nimport ErrorFetch from '../../components/ErrorFetch'\r\nimport { getCurrentWeatherUrl, getCurrentWeatherHourlyUrl} from '../../helper/apiWeather' \r\nimport fetchData from '../../helper/fetchData'\r\n\r\n\r\nexport default function InputSearch() {\r\n\r\nconst navigate = useNavigate()\r\nconst location = useLocation()\r\nconst weatherContext = useContext(WeatherContext)\r\nconst inputRef = useRef()\r\nconst optionRef = useRef()\r\nconst [cityOptions, setCityOptions] = useState([])\r\nconst [isFound, setFound] = useState(false)\r\nconst [isActiveInput, setActiveInput] = useState(false)\r\nconst [cityLocation, setCityLocation] = useState(null)\r\nconst [inputValue, setInputValue] = useState('')\r\nconst [counter, setCounter] = useState(-1)\r\nconst isActiveDelete = inputValue.length > 0\r\nconst [searchParams, setSearchParams] = useSearchParams()\r\n\r\nuseEffect(() => {\r\n    if(weatherContext.nameCity && weatherContext.latCity && weatherContext.lonCity){\r\n        setSearchParams({ lat: weatherContext.latCity, lon: weatherContext.lonCity ,city: weatherContext.nameCity})\r\n    }\r\n}, [weatherContext.nameCity, weatherContext.latCity, weatherContext.lonCity])\r\n\r\nuseEffect(() => {\r\n    window.addEventListener('click', onClickOutsideInput)\r\n    return () => window.removeEventListener('click', onClickOutsideInput)\r\n},[])\r\n\r\nconst onClickOutsideInput = (e) => {\r\n    if(!inputRef.current.contains(e.target)){\r\n        setActiveInput(false)\r\n    }\r\n}\r\n\r\nuseEffect(() => {\r\n\r\n    const latitude = searchParams.get('lat')\r\n    const longitude = searchParams.get('lon')\r\n    const city = searchParams.get('city')\r\n\r\n    weatherContext.setLatCity(latitude)\r\n    weatherContext.setLonCity(longitude)\r\n    weatherContext.setNameCity(city)\r\n\r\n    if(latitude && longitude){\r\n        weatherContext.setLoading(true)\r\n        fetchData(getCurrentWeatherUrl(latitude, longitude))\r\n            .then(({data}) => weatherContext.setWeatherData(data))\r\n            .catch(() => weatherContext.setError(true))\r\n            .finally(() => weatherContext.setLoading(false))\r\n\r\n        fetchData(getCurrentWeatherHourlyUrl(latitude, longitude))\r\n            .then(({data}) => weatherContext.setWeatherHourly(data))\r\n            .catch(() => weatherContext.setError(true))\r\n            .finally(() => weatherContext.setLoading(false))\r\n    } \r\n    else {\r\n        const success = (position) => {\r\n\r\n            const lat = position.coords.latitude\r\n            const lon = position.coords.longitude\r\n    \r\n            weatherContext.setLatCity(lat)\r\n            weatherContext.setLonCity(lon)\r\n\r\n            weatherContext.setLoading(true)\r\n            fetchData(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lon}&accept-language=en`)\r\n                .then(data => weatherContext.setNameCity(data.address.city))\r\n                .catch(() => weatherContext.setError(true))\r\n                .finally(() => weatherContext.setLoading(false))\r\n\r\n            fetchData(getCurrentWeatherUrl(lat, lon))\r\n                .then(({data}) => weatherContext.setWeatherData(data))\r\n                .catch(() => weatherContext.setError(true))\r\n                .finally(() => weatherContext.setLoading(false))\r\n\r\n            fetchData(getCurrentWeatherHourlyUrl(lat, lon))\r\n                .then(({data}) => weatherContext.setWeatherHourly(data))\r\n                .catch(() => weatherContext.setError(true))\r\n                .finally(() => weatherContext.setLoading(false))\r\n        }\r\n    \r\n        const error = () => {\r\n            weatherContext.setLoading(false)\r\n            weatherContext.setError(true)\r\n        }\r\n    \r\n        if(navigator.geolocation){\r\n            navigator.geolocation.getCurrentPosition(success, error)\r\n        }\r\n    }\r\n    \r\n    \r\n},[])\r\n\r\nuseEffect(() => {\r\n    const debounce = setTimeout(() => {\r\n        if(inputValue.length > 1){\r\n            // fetchData(`http://api.geonames.org/searchJSON?name=${inputValue}&maxRows=100&username=mkskhjwssofwfjjcjw00&&&`)\r\n            //     .then(data => console.log(data.geonames))\r\n            fetchData(`https://api.opencagedata.com/geocode/v1/json?q=${inputValue}&language=en&limit=100&key=23114c3eadd94316a76788a4c8df6e86`)\r\n                .then(data => {\r\n                    const arrayResults = data.results\r\n                    const filteredCities = arrayResults.map(filt => ({\r\n                        components: filt.components,\r\n                        geometry: filt.geometry\r\n                    }))\r\n                        .filter(filt => {\r\n                            return filt.components.city\r\n                        })\r\n                    console.log(filteredCities)\r\n                })\r\n                // .then(data => {\r\n                //     const filteredCities = data.geonames\r\n                //         .filter(filt => {\r\n                //             return filt.fclName === \"city, village,...\" \r\n                //             && filt.fcodeName !== \"section of populated place\" \r\n                //             && filt.lat && filt.lng \r\n                //             && filt.name.toLowerCase().startsWith(inputValue.toLowerCase())\r\n                //         })\r\n                //         .sort((a,b)=> b.population - a.population)\r\n                //     const uniqueFilteredCities = uniqueBy(filteredCities, (o1, o2) => o1.name === o2.name && o1.adminName1 === o2.adminName1 && o1.countryName === o2.countryName)\r\n                //     uniqueFilteredCities.length === 0 ? setFound(true) : setFound(false)\r\n                //     if(uniqueFilteredCities.length <= 6){\r\n                //         setCityOptions(uniqueFilteredCities)\r\n                //     }\r\n                //     if(uniqueFilteredCities.length > 6 && uniqueFilteredCities.length < 12){\r\n                //         setCityOptions(uniqueFilteredCities.slice(0, 6))\r\n                //     }\r\n                //     if(uniqueFilteredCities.length > 12 && uniqueFilteredCities.length < 18){\r\n                //         setCityOptions(uniqueFilteredCities.slice(0, 12))\r\n                //     }\r\n                //     if(uniqueFilteredCities.length > 18 && uniqueFilteredCities.length < 24){\r\n                //         setCityOptions(uniqueFilteredCities.slice(0, 18))\r\n                //     }\r\n                //     if(uniqueFilteredCities.length > 24 && uniqueFilteredCities.length < 30){\r\n                //         setCityOptions(uniqueFilteredCities.slice(0, 24))\r\n                //     }\r\n                //     if(uniqueFilteredCities.length > 30){\r\n                //         setCityOptions(uniqueFilteredCities.slice(0, 30))\r\n                //     }\r\n                //     setCounter(-1)\r\n                // })\r\n                // .catch(() => weatherContext.setError(true))\r\n        }\r\n        else{\r\n            setCityOptions([])\r\n            setFound(false)\r\n        }\r\n    },1000)\r\n\r\n    return () => clearTimeout(debounce)\r\n\r\n},[inputValue])\r\n\r\nconst handleInput = (e) => {\r\n    setInputValue(e.target.value)\r\n}\r\n\r\nconst handleSearchClick = (item) => {\r\n\r\n    weatherContext.setLatCity(item.lat)\r\n    weatherContext.setLonCity(item.lng)\r\n    weatherContext.setNameCity(item.name)\r\n    setInputValue('')\r\n    setCityOptions([])\r\n    window.scrollTo({ top: 0, behavior: 'smooth' })\r\n    if(location.pathname !== ''){\r\n        navigate('/')\r\n    }\r\n    weatherContext.setLoading(true)\r\n    fetchData(getCurrentWeatherUrl(item.lat, item.lng))\r\n        .then(({data}) => weatherContext.setWeatherData(data))\r\n        .catch(() => weatherContext.setError(true))\r\n        .finally(() => weatherContext.setLoading(false))\r\n\r\n    fetchData(getCurrentWeatherHourlyUrl(item.lat, item.lng))\r\n        .then(({data}) => weatherContext.setWeatherHourly(data))\r\n        .catch(() => weatherContext.setError(true))\r\n        .finally(() => weatherContext.setLoading(false))\r\n}\r\n\r\nconst onKey = (e) => {\r\n    if(e.key === 'Enter'){\r\n        handleSearchClick(cityLocation)\r\n        inputRef.current.blur()\r\n    }\r\n    if(e.key === 'ArrowDown' && counter < cityOptions.length - 1){\r\n        e.preventDefault()\r\n        setCounter((prev) => prev + 1)\r\n        setCityLocation(cityOptions[counter + 1])\r\n    }\r\n    if(e.key === 'ArrowUp' && counter >= 0){\r\n        e.preventDefault()\r\n        setCounter((prev) => prev - 1)\r\n        setCityLocation(cityOptions[counter - 1])\r\n    }\r\n\r\n    if(e.key === 'ArrowDown' && counter > 0 && Number.isInteger((counter + 1) / 6)){\r\n        e.preventDefault()\r\n        optionRef.current.scrollBy({ top: 300, behavior: 'smooth' })\r\n    }\r\n\r\n    if(e.key === 'ArrowUp' && counter % 6 === 0){\r\n        e.preventDefault()\r\n        optionRef.current.scrollBy({ top: -300, behavior: 'smooth' })\r\n    }\r\n}\r\n\r\nconst onMouseEnter = (item, index) => {\r\n    setCityLocation(item)\r\n    setCounter(index)\r\n}\r\n\r\nconst onClickDelete = () => {\r\n    setFound(false)\r\n    setCityOptions([])\r\n    setInputValue('')\r\n    inputRef.current.focus()\r\n}\r\n\r\nconst onClickIsFound = (e) => {\r\n    e.stopPropagation()\r\n    inputRef.current.focus()\r\n}\r\n\r\nreturn (\r\n<div className='search-wrapper'>\r\n    {weatherContext.isLoading && <Loading />}\r\n    {weatherContext.isError && <ErrorFetch />}\r\n    <div className='input-search'>\r\n        <input\r\n            ref={inputRef}\r\n            value={inputValue}\r\n            className='input-search'\r\n            placeholder='🔍︎ Search location'\r\n            type=\"text\" \r\n            onInput={handleInput}\r\n            onFocus={() => setActiveInput(true)}\r\n            onChange={() => setActiveInput(true)}\r\n            onKeyDown={onKey}\r\n        />\r\n        {isActiveDelete && <img onClick={onClickDelete} src={closeIcons} alt=\"delete_text\" />}\r\n    </div>\r\n    <ul className={isActiveInput ? 'lists-wrapper active' : 'lists-wrapper'} ref={optionRef}>   \r\n        {isFound && <li className='not-found' onClick={onClickIsFound}>city not found</li>}\r\n        {cityOptions.map((item, index) => \r\n        <li \r\n            key={index} \r\n            onClick={() => handleSearchClick(item)} \r\n            onMouseEnter={() => onMouseEnter(item, index)}\r\n            className={index === counter ? 'focused' : ''}\r\n        >\r\n            <h3>{item.name}</h3>\r\n            <div className='city-details'>\r\n                {item.adminName1 && <p>{item.adminName1},</p>}\r\n                {item.countryName && <p>{item.countryName}</p>}\r\n            </div>\r\n        </li>)}\r\n    </ul>\r\n</div>\r\n)\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}